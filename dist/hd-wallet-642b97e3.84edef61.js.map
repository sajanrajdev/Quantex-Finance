{"version":3,"sources":["../node_modules/hdkey/node_modules/secp256k1/lib/index.js","../node_modules/hdkey/node_modules/secp256k1/lib/elliptic.js","../node_modules/hdkey/node_modules/secp256k1/elliptic.js","../node_modules/hdkey/lib/hdkey.js","../node_modules/bnc-onboard/dist/esm/hd-wallet-642b97e3.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["errors","IMPOSSIBLE_CASE","TWEAK_ADD","TWEAK_MUL","CONTEXT_RANDOMIZE_UNKNOW","SECKEY_INVALID","PUBKEY_PARSE","PUBKEY_SERIALIZE","PUBKEY_COMBINE","SIG_PARSE","SIGN","RECOVER","ECDH","assert","cond","msg","Error","isUint8Array","name","value","length","Uint8Array","undefined","Array","isArray","numbers","join","includes","isCompressed","toTypeString","getAssertedOutput","output","len","Object","prototype","toString","call","slice","module","exports","secp256k1","contextRandomize","seed","privateKeyVerify","seckey","privateKeyNegate","privateKeyTweakAdd","tweak","privateKeyTweakMul","publicKeyVerify","pubkey","publicKeyCreate","compressed","publicKeyConvert","publicKeyNegate","publicKeyCombine","pubkeys","publicKeyTweakAdd","publicKeyTweakMul","signatureNormalize","sig","signatureExport","obj","outputlen","signatureImport","ecdsaSign","msg32","options","data","noncefn","signature","recid","ecdsaVerify","ecdsaRecover","ecdh","hashfn","xbuf","ybuf","EC","require","ec","ecparams","curve","BN","n","constructor","loadCompressedPublicKey","first","x","cmp","p","toRed","red","y","redSqr","redIMul","redIAdd","b","redSqrt","isOdd","redNeg","keyPair","pub","loadUncompressedPublicKey","x3","redISub","isZero","loadPublicKey","subarray","savePublicKey","point","encode","i","bn","negate","sub","umod","toArrayLike","set","iadd","isub","tweaked","imul","pair","keyFromPrivate","getPublic","pairs","add","isInfinity","g","mul","r","s","nh","sigR","sigS","lenR","posR","lenS","posS","message","_noncefn","counter","nonce","isValid","d","sign","canonical","k","pers","err","recoveryParam","sigObj","sigr","sigs","verify","recoverPubKey","scalar","sha256","hash","update","digest","getX","toArray","getY","publicToAddress","ethUtil","toChecksumAddress","numberToGet","generateAddresses","account","offset","publicKey","chainCode","path","hdk","HDKey","Buffer","addresses","dkey","deriveChild","address","push","dPath","concat","isValidPath","parts","split","accountFieldDigit","Number","isNaN","changeFieldDigit","addressFieldDigit","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"hd-wallet-642b97e3.84edef61.js","sourceRoot":"..\\src","sourcesContent":["const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD:\n    'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n}\n\nfunction assert (cond, msg) {\n  if (!cond) throw new Error(msg)\n}\n\nfunction isUint8Array (name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ')\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`\n      assert(length.includes(value.length), msg)\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`\n      assert(value.length === length, msg)\n    }\n  }\n}\n\nfunction isCompressed (value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')\n}\n\nfunction getAssertedOutput (output = (len) => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length)\n  isUint8Array('output', output, length)\n  return output\n}\n\nfunction toTypeString (value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nmodule.exports = (secp256k1) => {\n  return {\n    contextRandomize (seed) {\n      assert(\n        seed === null || seed instanceof Uint8Array,\n        'Expected seed to be an Uint8Array or null'\n      )\n      if (seed !== null) isUint8Array('seed', seed, 32)\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)\n      }\n    },\n\n    privateKeyVerify (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      return secp256k1.privateKeyVerify(seckey) === 0\n    },\n\n    privateKeyNegate (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    privateKeyTweakAdd (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    privateKeyTweakMul (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    publicKeyVerify (pubkey) {\n      isUint8Array('public key', pubkey, [33, 65])\n\n      return secp256k1.publicKeyVerify(pubkey) === 0\n    },\n\n    publicKeyCreate (seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SECKEY_INVALID)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyConvert (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyNegate (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyCombine (pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65])\n      }\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    signatureNormalize (sig) {\n      isUint8Array('signature', sig, 64)\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n      }\n    },\n\n    signatureExport (sig, output) {\n      isUint8Array('signature', sig, 64)\n      output = getAssertedOutput(output, 72)\n\n      const obj = { output, outputlen: 72 }\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen)\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    signatureImport (sig, output) {\n      isUint8Array('signature', sig)\n      output = getAssertedOutput(output, 64)\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaSign (msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32)\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')\n      output = getAssertedOutput(output, 64)\n\n      const obj = { signature: output, recid: null }\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj\n        case 1:\n          throw new Error(errors.SIGN)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaVerify (sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64)\n      isUint8Array('message', msg32, 32)\n      isUint8Array('public key', pubkey, [33, 65])\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true\n        case 3:\n          return false\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE)\n      }\n    },\n\n    ecdsaRecover (sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64)\n      assert(\n        toTypeString(recid) === 'Number' &&\n          recid >= 0 &&\n          recid <= 3,\n        'Expected recovery id to be a Number within interval [0, 3]'\n      )\n      isUint8Array('message', msg32, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.RECOVER)\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdh (pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)\n        isUint8Array('output', output)\n      } else {\n        output = getAssertedOutput(output, 32)\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.ECDH)\n      }\n    }\n  }\n}\n","const EC = require('elliptic').ec\n\nconst ec = new EC('secp256k1')\nconst ecparams = ec.curve\n\n// Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\nconst BN = ecparams.n.constructor\n\nfunction loadCompressedPublicKey (first, xbuf) {\n  let x = new BN(xbuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xbuf, ybuf) {\n  let x = new BN(xbuf)\n  let y = new BN(ybuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))\n    default:\n      return null\n  }\n}\n\nfunction savePublicKey (output, point) {\n  const pubkey = point.encode(null, output.length === 33)\n  // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]\n}\n\nmodule.exports = {\n  contextRandomize () {\n    return 0\n  },\n\n  privateKeyVerify (seckey) {\n    const bn = new BN(seckey)\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1\n  },\n\n  privateKeyNegate (seckey) {\n    const bn = new BN(seckey)\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(negate)\n    return 0\n  },\n\n  privateKeyTweakAdd (seckey, tweak) {\n    const bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0) return 1\n\n    bn.iadd(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n    if (bn.isZero()) return 1\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  privateKeyTweakMul (seckey, tweak) {\n    let bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    bn.imul(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  publicKeyVerify (pubkey) {\n    const pair = loadPublicKey(pubkey)\n    return pair === null ? 1 : 0\n  },\n\n  publicKeyCreate (output, seckey) {\n    const bn = new BN(seckey)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    const point = ec.keyFromPrivate(seckey).getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyConvert (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyNegate (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    point.y = point.y.redNeg()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyCombine (output, pubkeys) {\n    const pairs = new Array(pubkeys.length)\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i])\n      if (pairs[i] === null) return 1\n    }\n\n    let point = pairs[0].getPublic()\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakAdd (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0) return 2\n\n    const point = pair.getPublic().add(ecparams.g.mul(tweak))\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakMul (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2\n\n    const point = pair.getPublic().mul(tweak)\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  signatureNormalize (sig) {\n    const r = new BN(sig.subarray(0, 32))\n    const s = new BN(sig.subarray(32, 64))\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)\n    }\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport (obj, sig) {\n    const sigR = sig.subarray(0, 32)\n    const sigS = sig.subarray(32, 64)\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1\n\n    const { output } = obj\n\n    // Prepare R\n    let r = output.subarray(4, 4 + 33)\n    r[0] = 0x00\n    r.set(sigR, 1)\n\n    let lenR = 33\n    let posR = 0\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR)\n    if (r[0] & 0x80) return 1\n    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1\n\n    // Prepare S\n    let s = output.subarray(6 + 33, 6 + 33 + 33)\n    s[0] = 0x00\n    s.set(sigS, 1)\n\n    let lenS = 33\n    let posS = 0\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS)\n    if (s[0] & 0x80) return 1\n    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1\n\n    // Set output length for return\n    obj.outputlen = 6 + lenR + lenS\n\n    // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n    output[0] = 0x30\n    output[1] = obj.outputlen - 2\n    output[2] = 0x02\n    output[3] = r.length\n    output.set(r, 4)\n    output[4 + lenR] = 0x02\n    output[5 + lenR] = s.length\n    output.set(s, 6 + lenR)\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport (output, sig) {\n    if (sig.length < 8) return 1\n    if (sig.length > 72) return 1\n    if (sig[0] !== 0x30) return 1\n    if (sig[1] !== sig.length - 2) return 1\n    if (sig[2] !== 0x02) return 1\n\n    const lenR = sig[3]\n    if (lenR === 0) return 1\n    if (5 + lenR >= sig.length) return 1\n    if (sig[4 + lenR] !== 0x02) return 1\n\n    const lenS = sig[5 + lenR]\n    if (lenS === 0) return 1\n    if ((6 + lenR + lenS) !== sig.length) return 1\n\n    if (sig[4] & 0x80) return 1\n    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1\n\n    if (sig[lenR + 6] & 0x80) return 1\n    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1\n\n    let sigR = sig.subarray(4, 4 + lenR)\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)\n    if (sigR.length > 32) return 1\n\n    let sigS = sig.subarray(6 + lenR)\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)\n    if (sigS.length > 32) throw new Error('S length is too long')\n\n    let r = new BN(sigR)\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n    let s = new BN(sig.subarray(6 + lenR))\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)\n\n    return 0\n  },\n\n  ecdsaSign (obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn\n      noncefn = (counter) => {\n        const nonce = _noncefn(message, seckey, null, data, counter)\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32\n        if (!isValid) throw new Error('This is the way')\n\n        return new BN(nonce)\n      }\n    }\n\n    const d = new BN(seckey)\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1\n\n    let sig\n    try {\n      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })\n    } catch (err) {\n      return 1\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)\n    obj.recid = sig.recoveryParam\n\n    return 0\n  },\n\n  ecdsaVerify (sig, msg32, pubkey) {\n    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3\n\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 2\n\n    const point = pair.getPublic()\n    const isValid = ec.verify(msg32, sigObj, point)\n    return isValid ? 0 : 3\n  },\n\n  ecdsaRecover (output, sig, recid, msg32) {\n    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n\n    if (sigr.isZero() || sigs.isZero()) return 2\n\n    // Can throw `throw new Error('Unable to find sencond key candinate');`\n    let point\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid)\n    } catch (err) {\n      return 2\n    }\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const scalar = new BN(seckey)\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2\n\n    const point = pair.getPublic().mul(scalar)\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true)\n      const sha256 = ec.hash().update(data).digest()\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i]\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32)\n      const x = point.getX().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]\n\n      if (!ybuf) ybuf = new Uint8Array(32)\n      const y = point.getY().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]\n\n      const hash = hashfn(xbuf, ybuf, data)\n\n      const isValid = hash instanceof Uint8Array && hash.length === output.length\n      if (!isValid) return 2\n\n      output.set(hash)\n    }\n\n    return 0\n  }\n}\n","module.exports = require('./lib')(require('./lib/elliptic'))\n","var assert = require('assert')\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = require('crypto')\nvar bs58check = require('bs58check')\nvar secp256k1 = require('secp256k1')\n\nvar MASTER_SECRET = Buffer.from('Bitcoin seed', 'utf8')\nvar HARDENED_OFFSET = 0x80000000\nvar LEN = 78\n\n// Bitcoin hardcoded by default, can use package `coininfo` for others\nvar BITCOIN_VERSIONS = {private: 0x0488ADE4, public: 0x0488B21E}\n\nfunction HDKey (versions) {\n  this.versions = versions || BITCOIN_VERSIONS\n  this.depth = 0\n  this.index = 0\n  this._privateKey = null\n  this._publicKey = null\n  this.chainCode = null\n  this._fingerprint = 0\n  this.parentFingerprint = 0\n}\n\nObject.defineProperty(HDKey.prototype, 'fingerprint', { get: function () { return this._fingerprint } })\nObject.defineProperty(HDKey.prototype, 'identifier', { get: function () { return this._identifier } })\nObject.defineProperty(HDKey.prototype, 'pubKeyHash', { get: function () { return this.identifier } })\n\nObject.defineProperty(HDKey.prototype, 'privateKey', {\n  get: function () {\n    return this._privateKey\n  },\n  set: function (value) {\n    assert.equal(value.length, 32, 'Private key must be 32 bytes.')\n    assert(secp256k1.privateKeyVerify(value) === true, 'Invalid private key')\n\n    this._privateKey = value\n    this._publicKey = Buffer.from(secp256k1.publicKeyCreate(value, true))\n    this._identifier = hash160(this.publicKey)\n    this._fingerprint = this._identifier.slice(0, 4).readUInt32BE(0)\n  }\n})\n\nObject.defineProperty(HDKey.prototype, 'publicKey', {\n  get: function () {\n    return this._publicKey\n  },\n  set: function (value) {\n    assert(value.length === 33 || value.length === 65, 'Public key must be 33 or 65 bytes.')\n    assert(secp256k1.publicKeyVerify(value) === true, 'Invalid public key')\n\n    this._publicKey = Buffer.from(secp256k1.publicKeyConvert(value, true)) // force compressed point\n    this._identifier = hash160(this.publicKey)\n    this._fingerprint = this._identifier.slice(0, 4).readUInt32BE(0)\n    this._privateKey = null\n  }\n})\n\nObject.defineProperty(HDKey.prototype, 'privateExtendedKey', {\n  get: function () {\n    if (this._privateKey) return bs58check.encode(serialize(this, this.versions.private, Buffer.concat([Buffer.alloc(1, 0), this.privateKey])))\n    else return null\n  }\n})\n\nObject.defineProperty(HDKey.prototype, 'publicExtendedKey', {\n  get: function () {\n    return bs58check.encode(serialize(this, this.versions.public, this.publicKey))\n  }\n})\n\nHDKey.prototype.derive = function (path) {\n  if (path === 'm' || path === 'M' || path === \"m'\" || path === \"M'\") {\n    return this\n  }\n\n  var entries = path.split('/')\n  var hdkey = this\n  entries.forEach(function (c, i) {\n    if (i === 0) {\n      assert(/^[mM]{1}/.test(c), 'Path must start with \"m\" or \"M\"')\n      return\n    }\n\n    var hardened = (c.length > 1) && (c[c.length - 1] === \"'\")\n    var childIndex = parseInt(c, 10) // & (HARDENED_OFFSET - 1)\n    assert(childIndex < HARDENED_OFFSET, 'Invalid index')\n    if (hardened) childIndex += HARDENED_OFFSET\n\n    hdkey = hdkey.deriveChild(childIndex)\n  })\n\n  return hdkey\n}\n\nHDKey.prototype.deriveChild = function (index) {\n  var isHardened = index >= HARDENED_OFFSET\n  var indexBuffer = Buffer.allocUnsafe(4)\n  indexBuffer.writeUInt32BE(index, 0)\n\n  var data\n\n  if (isHardened) { // Hardened child\n    assert(this.privateKey, 'Could not derive hardened child key')\n\n    var pk = this.privateKey\n    var zb = Buffer.alloc(1, 0)\n    pk = Buffer.concat([zb, pk])\n\n    // data = 0x00 || ser256(kpar) || ser32(index)\n    data = Buffer.concat([pk, indexBuffer])\n  } else { // Normal child\n    // data = serP(point(kpar)) || ser32(index)\n    //      = serP(Kpar) || ser32(index)\n    data = Buffer.concat([this.publicKey, indexBuffer])\n  }\n\n  var I = crypto.createHmac('sha512', this.chainCode).update(data).digest()\n  var IL = I.slice(0, 32)\n  var IR = I.slice(32)\n\n  var hd = new HDKey(this.versions)\n\n  // Private parent key -> private child key\n  if (this.privateKey) {\n    // ki = parse256(IL) + kpar (mod n)\n    try {\n      hd.privateKey = Buffer.from(secp256k1.privateKeyTweakAdd(Buffer.from(this.privateKey), IL))\n      // throw if IL >= n || (privateKey + IL) === 0\n    } catch (err) {\n      // In case parse256(IL) >= n or ki == 0, one should proceed with the next value for i\n      return this.deriveChild(index + 1)\n    }\n  // Public parent key -> public child key\n  } else {\n    // Ki = point(parse256(IL)) + Kpar\n    //    = G*IL + Kpar\n    try {\n      hd.publicKey = Buffer.from(secp256k1.publicKeyTweakAdd(Buffer.from(this.publicKey), IL, true))\n      // throw if IL >= n || (g**IL + publicKey) is infinity\n    } catch (err) {\n      // In case parse256(IL) >= n or Ki is the point at infinity, one should proceed with the next value for i\n      return this.deriveChild(index + 1)\n    }\n  }\n\n  hd.chainCode = IR\n  hd.depth = this.depth + 1\n  hd.parentFingerprint = this.fingerprint// .readUInt32BE(0)\n  hd.index = index\n\n  return hd\n}\n\nHDKey.prototype.sign = function (hash) {\n  return Buffer.from(secp256k1.ecdsaSign(hash, this.privateKey).signature)\n}\n\nHDKey.prototype.verify = function (hash, signature) {\n  return secp256k1.ecdsaVerify(\n    Uint8Array.from(signature),\n    Uint8Array.from(hash),\n    Uint8Array.from(this.publicKey)\n  )\n}\n\nHDKey.prototype.wipePrivateData = function () {\n  if (this._privateKey) crypto.randomBytes(this._privateKey.length).copy(this._privateKey)\n  this._privateKey = null\n  return this\n}\n\nHDKey.prototype.toJSON = function () {\n  return {\n    xpriv: this.privateExtendedKey,\n    xpub: this.publicExtendedKey\n  }\n}\n\nHDKey.fromMasterSeed = function (seedBuffer, versions) {\n  var I = crypto.createHmac('sha512', MASTER_SECRET).update(seedBuffer).digest()\n  var IL = I.slice(0, 32)\n  var IR = I.slice(32)\n\n  var hdkey = new HDKey(versions)\n  hdkey.chainCode = IR\n  hdkey.privateKey = IL\n\n  return hdkey\n}\n\nHDKey.fromExtendedKey = function (base58key, versions) {\n  // => version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n  versions = versions || BITCOIN_VERSIONS\n  var hdkey = new HDKey(versions)\n\n  var keyBuffer = bs58check.decode(base58key)\n\n  var version = keyBuffer.readUInt32BE(0)\n  assert(version === versions.private || version === versions.public, 'Version mismatch: does not match private or public')\n\n  hdkey.depth = keyBuffer.readUInt8(4)\n  hdkey.parentFingerprint = keyBuffer.readUInt32BE(5)\n  hdkey.index = keyBuffer.readUInt32BE(9)\n  hdkey.chainCode = keyBuffer.slice(13, 45)\n\n  var key = keyBuffer.slice(45)\n  if (key.readUInt8(0) === 0) { // private\n    assert(version === versions.private, 'Version mismatch: version does not match private')\n    hdkey.privateKey = key.slice(1) // cut off first 0x0 byte\n  } else {\n    assert(version === versions.public, 'Version mismatch: version does not match public')\n    hdkey.publicKey = key\n  }\n\n  return hdkey\n}\n\nHDKey.fromJSON = function (obj) {\n  return HDKey.fromExtendedKey(obj.xpriv)\n}\n\nfunction serialize (hdkey, version, key) {\n  // => version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n  var buffer = Buffer.allocUnsafe(LEN)\n\n  buffer.writeUInt32BE(version, 0)\n  buffer.writeUInt8(hdkey.depth, 4)\n\n  var fingerprint = hdkey.depth ? hdkey.parentFingerprint : 0x00000000\n  buffer.writeUInt32BE(fingerprint, 5)\n  buffer.writeUInt32BE(hdkey.index, 9)\n\n  hdkey.chainCode.copy(buffer, 13)\n  key.copy(buffer, 45)\n\n  return buffer\n}\n\nfunction hash160 (buf) {\n  var sha = crypto.createHash('sha256').update(buf).digest()\n  return crypto.createHash('ripemd160').update(sha).digest()\n}\n\nHDKey.HARDENED_OFFSET = HARDENED_OFFSET\nmodule.exports = HDKey\n","import HDKey from 'hdkey';\nimport * as ethUtil from 'ethereumjs-util';\nimport { Buffer } from 'buffer';\nvar publicToAddress = ethUtil.publicToAddress,\n    toChecksumAddress = ethUtil.toChecksumAddress;\nvar numberToGet = 5;\n\nfunction generateAddresses(account, offset) {\n  var publicKey = account.publicKey,\n      chainCode = account.chainCode,\n      path = account.path;\n  var hdk = new HDKey();\n  hdk.publicKey = new Buffer(publicKey, 'hex');\n  hdk.chainCode = new Buffer(chainCode, 'hex');\n  var addresses = [];\n\n  for (var i = offset; i < numberToGet + offset; i++) {\n    var dkey = hdk.deriveChild(i);\n    var address = publicToAddress(dkey.publicKey, true).toString('hex');\n    addresses.push({\n      dPath: \"\".concat(path, \"/\").concat(i),\n      address: toChecksumAddress(\"0x\".concat(address))\n    });\n  }\n\n  return addresses;\n}\n\nfunction isValidPath(path) {\n  var parts = path.split('/');\n\n  if (parts[0] !== 'm') {\n    return false;\n  }\n\n  if (parts[1] !== \"44'\") {\n    return false;\n  }\n\n  if (parts[2] !== \"60'\" && parts[2] !== \"1'\") {\n    return false;\n  }\n\n  if (parts[3] === undefined) {\n    return true;\n  }\n\n  var accountFieldDigit = Number(parts[3][0]);\n\n  if (isNaN(accountFieldDigit) || accountFieldDigit < 0 || parts[3][1] !== \"'\") {\n    return false;\n  }\n\n  if (parts[4] === undefined) {\n    return true;\n  }\n\n  var changeFieldDigit = Number(parts[4][0]);\n\n  if (isNaN(changeFieldDigit) || changeFieldDigit < 0) {\n    return false;\n  }\n\n  if (parts[5] === undefined) {\n    return true;\n  }\n\n  var addressFieldDigit = Number(parts[5][0]);\n\n  if (isNaN(addressFieldDigit) || addressFieldDigit < 0) {\n    return false;\n  }\n\n  return true;\n}\n\nexport { generateAddresses, isValidPath };","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}