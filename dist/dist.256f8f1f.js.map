{"version":3,"sources":["../node_modules/bnc-onboard/node_modules/ethereumjs-tx/node_modules/bn.js/lib/bn.js","../../src/secp256k1v3-lib/index.ts","../../src/secp256k1v3-lib/der.ts","../src/secp256k1v3-adapter.ts","../src/constants.ts","../src/bytes.ts","../src/hash.ts","../src/account.ts","../src/signature.ts","../src/object.ts","../src/index.ts","../node_modules/ethereumjs-common/dist/chains/mainnet.json","../node_modules/ethereumjs-common/dist/chains/ropsten.json","../node_modules/ethereumjs-common/dist/chains/rinkeby.json","../node_modules/ethereumjs-common/dist/chains/kovan.json","../node_modules/ethereumjs-common/dist/chains/goerli.json","../../src/chains/index.ts","../node_modules/ethereumjs-common/dist/hardforks/chainstart.json","../node_modules/ethereumjs-common/dist/hardforks/homestead.json","../node_modules/ethereumjs-common/dist/hardforks/dao.json","../node_modules/ethereumjs-common/dist/hardforks/tangerineWhistle.json","../node_modules/ethereumjs-common/dist/hardforks/spuriousDragon.json","../node_modules/ethereumjs-common/dist/hardforks/byzantium.json","../node_modules/ethereumjs-common/dist/hardforks/constantinople.json","../node_modules/ethereumjs-common/dist/hardforks/petersburg.json","../node_modules/ethereumjs-common/dist/hardforks/istanbul.json","../node_modules/ethereumjs-common/dist/hardforks/muirGlacier.json","../../src/hardforks/index.ts","../src/transaction.ts","../src/fake.ts"],"names":[],"mappings":"AeAA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AJAA,ADAA,AOAA,ACAA,AFAA,AHAA,ADAA;ApBAA,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AJAA,ADAA,AOAA,ACAA,AFAA,AHAA,ADAA;AlBDA,ADAA,ADCA,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AJAA,ADAA,AOAA,ACAA,AFAA,AHAA,ADAA,AVFA,0CRA0C,ADAA,GSAY;AMEzC,AWFA,AzBCb,ADAA,ADCA,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AJAA,ADAA,AOAA,ACAA,AFAA,AHAA,ADAA,AVHS,QMEI,AWFA,MXEM,GAAe,AWFZ,GAAG,gBjBAhB,OAAO,CAAe,yBRCsC,ADAA;ADErE,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AJAA,ADAA,AOAA,ACAA,AFAA,AHAA,ADAA,AbJA,AFAA,ADAA,AEAM,AICN,ADDA,ANAA,AKAA,IQGE,AWFA,ApBDI,AFAA,ACAA,AGAA,ANAA,AKAA,CmBCH,IXEI,AVHsD,CCAjD,AEAA,COGH,ETHM,AFAA,AIAA,ANAA,AKAA,GHAG,ACAkD,AHAlD,AKAA,CmBCH,ArBDsD,EqBCpD,CpBDK,AEAA,CFAC,AEAA,EJAE,AFAA,AKAA,CHAC,AFAA,AKAA,EmBCF,AvBDI,CuBCH,EpBDM,AEAA,CFAC,AEAA,CFAA,AGCmB,ADDnB,KJAM,CAAC,CAAA,QsBCK,CAAC,ArBDsD,AEAlD,CmBCH,ArBDsD,AEAlD,CAAA,CFA1C,OHAmD,CAAC,CGA3C,AHA2C,eGA3C,EAAE,SAAS,eAAA,EAAa,IAAI,eAAA,EAAE,SAAS,eAA4C,CAAA;AJKpG,ADFA,ADCA,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AJAA,ADAA,AOAA,ACAA,AFAA,AHAA,ADAA,AbJA,AFAA,ADCA,AEDA,AIAS,ADAT,ANAA,AKAA,ImBCE,AzBGI,AKJA,ADAA,AGAA,ANAA,CwBCH,GXEC,GAAG,EAAE,ATHM,AEAA,CHAC,CHAC,CwBCH,ApBDI,AEAA,CHAC,CqBCH,AxBDI,IaGF,CTHO,AEAA,CFAC,ADAA,AGAA,CkBCH,ArBDI,AHAA,CwBCH,A1BCI,AIFA,AFAA,AKAA,OEAnB,GRI6B,AKJA,AEAA,CFAC,AEAA,CFAA,ADAC,AGAD,CPIE,AIJA,CAAA,AIAzB,CAAmB,GiBCO,CAAC,AzBGI,CyBHH,AzBGI,IAAI,CAAC,ACJA,CAAC,CAAA;AFGtD,ADCA,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AJAA,ADAA,AOAA,ACAA,AFAA,AHAA,ADAA,AbJA,AFCA,ACDA,AGAA,ANAA,AKAA,ImBCE,AzBGA,ADFI,AMFA,ADAA,AHAA,CwBCH,C1BCK,CEFC,CaGL,CfDO,C0BDH,AxBDI,CaGL,CWFG,AzBGA,CcDD,ATHM,ADAA,GLEG,AMFA,ADAA,CLEC,AEFA,CAAC,CwBCH,CAAC,EXEA,CTHO,ADAA,CCAC,ADAA,CGAC,EREE,CAAC,CAAC,EAAE,C0BDH,A1BCG,C0BDF,AnBD0C,CmBCzC,ErBDM,CAAC,CAAA,GHAI,CAAC,CAAA,IIAK,CAAC,CAAA;ANIlD,ADAA,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AJAA,ADAA,AOAA,ACAA,AFAA,AHAA,ADAA,AbJA,ADAA,AGAA,ANuBA,AKvBA,GJCG,CuBAD,AzBGA,ADDI,C0BFH,C1BEK,EeAJ,AdCE,CDDK,EeAJ,EAAE,AfAM,EAAE,CAAC,MeAA,CWFG,EAAE,ArBDI,CCAC,CNGC,CAAC,CAAA,EOHC,CmBCD,CAAC,AlBDyB,yBkBCA,CAAC,CAAC;A1BG1D,ADAA,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AJAA,ADAA,AOAA,ACAA,AFAA,AHAA,ADAA,AbJA,AHCa,AEDb,AGCA,ADMA,ImBNE,AzBGA,ADDI,C0BFH,GXEC,AdCE,AEHO,IYEL,AfAM,EeAJ,CfAO,EAAE,CAAC,CGFI,EYEP,AWFE,CvBAY,CuBAV,A1BEI,CAAA,EGFU,EAAE,CACnC,CuBD0B,CAAC,EpBD8C,ADA9B,qBqBCO,CAAC,CAAC,uCvBCc,EAClE,EAAE,CACH,CAAA;AHMD,ADNA,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AJAA,ADAA,AOAA,ACAA,AFAA,AHAA,ADAA,AbJA,AHKA,AEJA,GDAG,CsBAD,AzBGA,CyBHC,E1BQI,CeNH,AdCE,ADKE,GeND,EAAE,GWFK,EAAE,GXEC,GfMO,C0BRD,CAAC,C1BQG,IMTwB,MNSf,O0BRM,CAAC,CAAC,C1BQU,EAAE,UAA0B;ADLlF,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AJAA,ADAA,AOAA,ACAA,AFAA,AHAA,ADAA,AbHA,AFAa,GGMV,CmBND,AzBGA,ADIsD,CeLrD,AWFA,GzBGG,AGHO,KAAK,GAAG,KsBAF,EAAE,GtBAS,IsBAF,CAAC,A1BO2B,AIPb,EJOa,iBAA0B,I0BP9B,CAAC,CAAC;A3BGtD,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AJAA,ADAA,AOAA,ACAA,AFAA,AHAA,ADAA,AZGa,GJFV,CYFD,AWFA,AzBGA,ADIA,AIPA,CsBAC,GzBGG,ADIE,AODK,CPCJ,EeLA,AXFA,CJOG,CeLD,CRIQ,EPCH,C0BPD,AtBAA,AGMO,CPCJ,AIPF,CsBAC,A1BOE,CeLD,CAAC,KWFK,CAAC,AnBOvB,EPA2B,AIPF,CJOG,AIPF,CJOE,GOAb,CHPgB,CAAC,AGQhC,CQNiC,AXFA,CWEC,GXFG,CAAC,CAAC,CAAC,CAAA,CsBAE,AnBQxB,CmBRyB,CAAC,AnBS5C,OAAgB;ARNlB,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AJAA,ADAA,AOAA,ACAA,AFAA,AHAA,ADAA,AfHA,ADIa,CCJZ,CAAA,CEAE,AJsBA,CapBD,AWFA,AzBGA,ADIA,AOGA,CmBVC,GzBGG,ADIA,AGHO,AIML,CPHD,CAAC,CeLC,ARQE,EQRA,CfKC,AOGE,CmBVD,A1BOA,E0BPE,CvBIQ,EYFL,CAAC,AZEW,EHGT,AOGE,CmBVD,A1BOA,AOGE,CmBVD,A1BOA,AGHW,CHGV,CGHY,CAClC,AIK0B,CAAC,CPHD,CAAC,EAAE,GOGK,CQRD,CAAC,ARQE,ImBVE,CAAC,CAAC,InBUM,CAAC,CAAA,6CJLoB,EACnE,EAAE,CACH,CAAA;AJJD,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AJAA,ADAA,AOAA,ACAA,AFAA,AHAA,ADAA,AbHa,AFCb,ADOA,AMlBA,APgCa,AyBhCb,IZYE,AWFA,AzBGA,AQbI,AFoBJ,CmBVC,GzBGG,ADIF,AMPS,AJsBA,AKZL,GQRC,EAAE,ANZI,CTiBL,ESjBQ,AFoBF,EmBVA,A1BOF,CMPU,ACUG,CQRT,AWFA,CXEC,CTFQ,ACUG,CPHX,ASjBM,AFoBM,CPHX,ASjBM,APgCG,GwBtBJ,AxBsBO,CwBtBN,GnBUa,CAAA,GEpBS,EMYb,AboBM,CapBL,SNZa,APgCU,CwBtBb,AjBVI,CiBUH,AjBVG,CiBUF,CCCxB,I3BM2B,CAAC,CAAA;ADJpD,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AJAA,ADAA,AOAA,ACAA,AFAA,AHAA,ADAA,AVbA,AAkBS,AkBPT,CDDC,CAAA,CrBAE,CUED,AdCA,AKHA,AJsBA,AKXA,CPJC,GCJG,AKHE,ACWA,CQTD,EAAE,ARSE,GAAG,IQTE,CAAC,ETFI,GAAG,EAAE,CAAA,GGQR,GMNa,CAAC,ONZ0B,ckBWpB,YzBqB2B;AHnBjE,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,AHAA,ADAA,ASfA,AvBYa,AIXb,AAUA,AkBEA,GxBOG,CYND,AdCA,ADKA,AMRA,AGXI,APiCJ,IFdM,AMRA,ADAK,AHsBP,AKXF,CAAC,CQTG,CRSD,CQTG,ATFE,CNQC,ASnBE,CJWI,AEWT,CDXK,ACWJ,CPHK,ASnBE,CJWI,CJGN,ADKE,AEcF,CapBC,AfME,AEcF,CapBC,AfME,CAAC,ESnBI,CTmBD,ASnBE,AFsBN,CPHK,AEcF,AKXF,CPHK,CAAC,AKRI,CLQJ,AMRP,ADAiB,CCAhB,CDAkB,AHsBX,AKXF,CAAC,CLWG,AKXF,CoBVG,CtBD0B,AHsBzB,AKXF,CQTG,CAAC,ANbI,AFsBN,CEtBO,AFsBN,CEtBM,IHWL,CAAC,CAAA,OsBZO;A7Be1C,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,AHAA,ADAA,AhBKa,AyBpBb,AnBCA,AkBcA,CZDC,CAAA,EdCC,ADKA,AMRA,ADDqC,IJIjC,AEKO,ADcT,AKXA,CAAC,EPHI,AMRA,ACWF,GAAG,CLWC,AKXA,AoBRI,KzBmBC,CAAA,CFdI,CAAC,CGAQ,AIGT,CFZmB,AEYlB,CEtBO,CNoB1B,AEVqC,CLSb,CAAC,CMRP,ACWM,CDXL,ACWM,EPHI,A4BpBA,ArBuBF,EPHI,AMRR,ACWM,CDXL,CNQS,AMRT,ADD+B,AEYxB,CAAC,IPHM,CAAC,IAAI,EAAE,EAAE,UAAU,CAAC,CAAA,8BGCQ,CAAA;AHApE,ADNA,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,AHAA,ADAA,AbHA,AHUA,AyBrBA,AnBMS,AkBQT,C3BKC,AMRA,CNQA,AMRA,CGDE,CRID,AIJA,AsBII,CzBmBH,GDnBG,AIJA,AEYF,CAAC,EAAE,AoBRM,GAAG,CtBJH,CAAC,AIJH,EFgBG,AoBRM,CpBQL,CAAC,CFZG,AEYF,QFZU,AEYF,GAAG,CFZG,AEYF,CFZG,IsBIV,CAAC,CpBQa,GFZK,AEYF,CFZG,AEYF,CqBtBD,ErBsBI,EAAE,CAAC,CAAC,CAAC,CAAC,EFZI,CAAC,CAAC,CAAC,EAAE,CEYD,GAAG,EAAE,uCoBR2B,EAAE,EAAE,CAAC,CAAA;A3BO9F,ADPA,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,AHAA,ADAA,AbFA,AsBXA,AnBFA,AAWA,AkBKA,GnBJG,CPGD,ACoBA,CKZC,CAAA,CPFI,CCND,ADME,AKVJ,CAAC,EHwBI,CGxBD,MAAM,CAAC,CHwBG,CAAC,EGxBA,CAAC,CAAC,AIXM,EJWJ,CLUK,GAAG,EKVF,CAAC,CAAA,EHwBK,CAAC,GFdI,OEcM,CAAC,EFdW,EEcP,CAAC,UAAU,CAAC,CAAC,CAAA;AHpBhE,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,AHAA,ADAA,AVLS,ADEI,ANuBb,CAAC,CAAA,CCbE,CFPD,ADMA,ASsCA,AFnCA,CFbC,GJIG,ADME,AQTK,ERSH,COGD,EPHI,COGD,CAAA,EPHK,CSXL,CTWO,CAAC,IQTS,GAAG,GRSF,CAAC,CAAA,KQTU,IAAS,EAAE,MAAW,EAAE,IAAS;ATG1E,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,AHAA,ADAA,AhBOa,AMvBb,APqCA,AKZA,CAAC,CAAA,CDXE,AFAA,AuBGA,C1BDD,ADMA,AQTA,ECbI,CAAC,CRgBD,ADMA,AGCO,AKVP,CHFG,AGEF,CRSC,CAAC,CQTC,CCbG,CAAC,CTsBD,AQTA,CRSC,CQTC,CAAA,GCbM,CNuBM,CMvBJ,CTsBD,CAAC,AGCe,CHDd,CAAC,IAAI,AGCe,CHDd,AGCe,AMvBb,CAAC,CAAA,ETsBC,AGCe,CAAC,CHDd,CAAC,MAAM,EAAE,EAAE,YGCmB,EAAE,KAAK,CAAC,CAAA;AJP1E,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,AHAA,ADAA,AbFa,AFAA,ADUb,AMRA,AFUA,AoBTA,I1BDE,AOHA,IPGI,ADMF,AMRS,AFAA,ACHT,AGEE,CHFD,AGEE,GHFC,ELWE,EQTI,ERSA,CQTG,EJCS,AIDP,CFCQ,AEDR,CRSA,CAAC,AIRS,CEAC,GDHd,CAAC,CAAC,CAAC,CAAA,EDGmB,CEAC,EFAO,EAAE,GEAM,GFAQ,EAAE,KAAsB,EJQpC,CAAC,CAAA;ADNnD,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,AHAA,ADAA,IlBAE,AKFA,AFD8D,AIC9D,AmBkBA,C3BVC,AKXA,GJKG,GKFG,eFDuD,AICxC,EJDwC,IEClC,CAAC,IAAI,CAAC,GFDkD,IEC3C,CAAC,CAAA;APE5C,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,AHAA,ADAA,AbFA,CAAC,CAAA,CHUE,AMRA,CRAD,ADOA,AIVA,ACDA,AGEA,IPEI,AGHE,ACDF,AGEA,CHFC,AGEA,ERSE,AIVE,EJUA,AKXA,CLWC,AIVE,CICD,GRSG,AQTA,CRSC,QAAQ,AIVN,CJUO,AIVN,AICK,CRSE,CAAC,CAAC,EQTkB,CJDrB,CAAC,CAAA,MJUa,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC,CAAA;AAC1D,ADRA,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,AHAA,AdDA,AHSa,AMRb,CTOC,CAAA,COGE,CNVD,AGHA,GAAG,AK+CA,CR5CC,AEQO,AEbA,AGEY,EJAjB,ECFS,GAAG,GAAG,CAAA,ODEP,CAAC,EDWiB,CCXd,AIAK,CJAJ,CAAA,ADYnB,AKZuB,aAAsB,CCGpB,oDNSyC,CAAA;AHApE,ADTA,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,ApBUA,AMTA,AFSa,INVX,AGHA,ACDA,AIgDA,GTpCK,CCRD,ADQE,AIXF,AIAF,ADaS,IFdH,AGCF,CJAG,EAAE,CCDC,CGCD,ADaS,CFdN,CGCD,CCgDX,AFnCqB,GPFF,ESqCY,CTrCT,CSsCtB,GFnCF,KEmC0B,CTtCO,CSuC/B,AFpCa,EACf,CAAS,EPJsC,AOK/C,CAAS,EACT,CAAS,EACT,OEgCoC,AFhCpB;ARflB,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,GjBDG,AJsBA,CDrBD,ADQA,AOQA,INhBI,ADQA,AIXF,ACDA,AIoDA,AFhCI,CPRD,GAAG,AIXF,AKmDA,ADlDF,CHFG,AIoDA,ELnDE,CJWG,AIXF,ACDA,AGEA,CHFC,AEoBI,CPRD,AKZF,CLYG,COQG,CClBL,CJDG,EICM,CRUD,AIXF,AKmDA,CTxCG,AQVE,ADkBA,CPRD,AQVC,ADkBC,CPRD,ASwCF,CTxCE,EIXC,CKmDC,CLnDC,AKmDA,AFhCI,CAAC,CAAC,MEgCE,CAAC,KAAK,CAAC,CAAA,GFhCA,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,iBAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA;ARhB3E,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,AjBDa,AJsBA,GCXV,AMTA,CRDD,ADQA,AOQA,INhBI,ADQA,AMTO,AGiDT,AP3BS,AKLL,CPRD,CAAC,EIXF,ACDA,AIoDE,ADlDF,CCkDG,CTxCG,CAAC,AIXJ,CAAC,AICA,ADkBM,CClBL,EHFE,AEoBM,CHnBL,CEEY,AFFX,CKmDG,CTxCG,CAAC,AMTO,AFFX,AICA,ANuBW,CFbN,AIXJ,AKmDE,ADlDF,CRUK,AIXL,CFwBa,CGzBV,CAAC,AIoDE,CTxCG,AKZJ,AIoDC,CTxCI,AKZJ,CAAA,AGEC,CRUK,AQVJ,CFCW,GJsBG,EKLF,CAAC,CDjBa,ACiBZ,EClBb,ADkBe,ILKgB,CMvBlB,CNuBoB,CKLX,CAAC,CAAA,OLK8B;AHrBjF,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,ApBUa,AMTb,GmBdG,C3BaD,AKDA,AJsBA,AKLA,INhBI,ADQF,AMTI,AHWK,AMsCT,AFhCE,CPRD,AKZA,AEoBE,GPRC,AIXF,AKmDE,CAAC,GTxCG,AMTI,AEDR,ERUM,CAAC,AMTI,AFFN,CJWG,CAAC,AQVN,CRUM,AIXD,AICJ,CJDI,IDagB,AKZf,ADkBQ,CClBP,ADkBQ,EJNiB,CKZtB,CCkDO,GAAG,CNtCkB,AIMf,CJNgB,AIMf,CDjBL,AEDJ,CDkBW,CDjBL,CAAA,AHWsB,CAAC,AKZzB,CAAC,CCGN,IDHW,CAAC,CAAC,GCkDW,KAAK,ADlDR,CAAC,KAAK,CAAG,CAAA,CCkDQ,AP3BE,CO2BD,CAAC,CAAC,CNtCU,CMsCR,CNtCU,AMsCT,CAAC,CAAC,GNtCY,CAAC,CAAA,aMsCK,CAAA;AVhDzF,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,ApBWA,AyBxBA,AnBeA,IRFE,AKDA,AJsBA,CFbC,GCRG,AIJF,AIoDA,AP3BE,AKLF,CHnBC,EEEI,CGiDD,ADlDF,CHFG,AGEF,CAAC,ADkBE,CClBF,CHFI,CAAC,CAAC,AHyBE,AKLF,CDjBG,AJsBA,CO2BD,EAAE,CFhCC,CDjBG,ACiBF,CLKG,KAAK,EAAE,EAAE,UItBE,CAAC,MCiBY,CDjBL,ACiBM,CDjBL,ACiBK,CDjBL;APC3C,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,AjBDA,CAAC,CAAA,ELCC,ADSA,A4BvB2C,CrB8B1C,GNhBG,ADSA,AIZF,AFwBA,CFZG,GAAG,AKbJ,AIoDA,ADlDA,ENuBI,CExBC,CJYG,ASuCJ,CAAC,CTvCK,AIZF,AFwBA,CFZG,AIZF,ACDF,AGEA,IHFI,CDCG,ACDF,AGEF,CRWO,AIZF,ACDF,AGEH,CRWQ,AIZF,ACDF,CLaK,AKbL,CLaM,AIZF,AKmDF,AP3BE,CFZE,ASuCH,AP3BE,KExBK,CAAC,CAAA,CKmDA,CAAC,CmB9DwB,AnB8DxB,qBP3BwB,CAAC,CAAA;AHrBzD,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,AjBAA,GHWG,AMTA,CRFD,ADSA,A4BjBA,ArBwBA,CHnBC,AFwBA,GDrBG,ADSA,AOOE,CPPD,AKbF,AIoDA,ADlDA,CRWG,IAAI,CAAC,KOOO,GPPC,AOOE,CPPD,CAAC,CAAC,G4BhBpB,C5BgBwB,CAAC,COOG,CPPD,A4BhBsC,ArBuBpC,EqBtB7B,IAA6B,CrBsBO,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAA;ARhBtE,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,ApBWa,AMTb,IRFE,AQgDA,AP1BA,AKNA,CEgCC,GRhDG,ADSF,AGES,AyBnBT,AvBIA,AGEA,ANwBI,CFbH,AIbI,EGoBA,CPPD,CKbC,EGEE,CRWC,AKbA,CAAC,AH0BI,CFbH,AKbA,CLaC,CAAC,AEaI,AKNF,CPPD,AOOE,CPPF,CGEW,GAC1B,GyBpBE,EAAA,ApBMe,ANwBY,CMxBX,ANwBY,IMxBR,CAAC,ADkBU,CAAC,EqBxBiC,ApBMzC,CCIN,ADJO,CAAA,MNwBmB,CAAC,CKND,EAAE,KAAK,CAAC,CLMG,AKNF,ELMI,GKNC,CAAC,CAAC,CAAC,CAAA,GLMM,CAAC,CAAA,mBCVJ,CAAA;AJZpE,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,ApBaA,AMVA,AFaA,CAAC,CAAA,ENhBC,AQdA,ADYA,ANyBA,CFdC,AQXA,CAAA,EPEG,AGJF,AwBJA,G1B+BK,CE3BD,ACAF,EH2BM,CE3BD,AF2BE,CE3BD,GCAC,GDAK,GAAG,GCAC,CuBJlB,AvBImB,CAAC,CDAG,AwBJvB,AvBIqB,AH2BI,CG3BJ,AH2BK,CE3BD,OwBJI,E1B+BO,EAAE,SAAS,EAAE,UAAU,CAAC,CAAA;AHvBhE,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,ArBuBA,AKNA,CLMC,CAAA,EDvBC,ADUA,AQXA,IPCI,A2BXJ,ApBUI,CHHD,AGGE,ERWE,CIdH,GAAG,CAAC,CJcK,CAAC,AQXA,EJHF,AwBHV,CxBGW,AIGI,GRWG,AIdJ,CJcK,CAAC,AIdJ,CJcK,CAAC,EQXE,EJHF,GAAG,GAAG,AwBHtB,C5BiB2B,AIdJ,AIGI,CRWC,E4BjBxB,EAAE,CxBGuB,CJcK,AIdJ,CAAA,CJcM,A4BjB1B,CAAC,G5BiB6B,EAAE,EAAE,CAAC,C4BApD,C5BAsD,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;AAC1F,ADXA,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,ArBwBA,CFdC,CAAA,CGGE,AMVA,CRHD,IAAI,A2BNF,AvBEA,AGGA,IJHE,CCAG,CuBFC,CAAC,ApBKA,CHHC,CAAC,CAAC,AGGA,CJHD,AIGE,GJHC,CAAA,EIGK,CAAC,GoBLG,CAAC,ApBKA,CAAC,GAAG,CoBLA,ApBKC,CAAA,CoBLC,MAAM,EAAE;A5BkBxC,ADZA,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,ApBaa,AMVb,IRHE,AODA,CAAC,CAAA,CRYI,CCXD,ADWE,AGEK,CCjBR,GwBFC,AvBEA,MLeY,CKfL,ELeQ,AGEK,CyBnBV,EzBmBqB,AyBnBnB,IAAI,AvBEA,CAAC,CFiBoB,AEjBnB,CLgBtB,AGC0C,AEjBnB,CAAA,GFiBuB,CAAC,IHD9B,EACjB,ISVyB,MTUP,EAClB,KGD8D,EAAE,GHCtC,EGD2C,CAAC,CAAA;AJbxE,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,AdIA,GFaG,CNjBD,ADaA,AQbA,IPAI,AGJF,CCAC,CGIG,CAAC,CoBNH,GxBEK,GAAG,AIIE,CJJD,AIIE,KJJG,AwBFF,CxBEG,CAAC,AwBFF,GpBMF,CoBNM,C5BmBtB,CIjB0B,CJiB1B,AIjB2B,CAAA,AIID,EAAE,CAAS,aRaX;ADb5B,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,AhBiBa,INjBX,ADcA,CIlBC,GHIG,ADcE,AKlBJ,AGIA,ADiBS,IqBvBP,ApBME,CRcK,AQdJ,EoBNA,AvBEE,CLkBK,AKlBJ,AEqBS,CqBvBV,AvBEE,CLkBK,CAAC,AOGK,CCjBR,CAAC,IAAI,CAAC,GDiBW,CAAS,CqBvBzB,ApBMU,CRcK,AQdJ,ADiBgB,CPHX,AOGoB,EAAE,CCjBvB,ADiBgC,CCjB/B,CoBNhB,ApBMgB,ADiBiC,IPHxB,CAAC,A4BpBtB,C5BoBsB,A4BpBrB,CrBuB4D,eqBvB5C,EAAE,EAAvB,CAAuB;A7BMxC,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,AnBJA,CAAC,CAAA,CKQE,CRJD,ADeA,AOEA,INjBI,ADeE,AQfJ,ADiBI,IqBvBF,AvBEA,ELmBQ,C4BrBL,CrBuBO,CPFC,A4BrBN,ApBME,CHJD,CEqBO,EPFE,CKnBL,CLmBO,AQfJ,CReK,G4BrBb,AvBEU,CAAC,EuBFR,I5BqBoB,CAAC,CAAA,GOEI,CAAC,CAAC,EAAE,OAAO,CAAC,CAAA,KFrBF,IAAM,CAAC,CAAA;ANIxD,AeCA,ADAA,AHAA,AEAA,ADAA,AUAA,ALAA,AMAA,AEAA,ADAA,AnBJa,AKQb,GHJG,AJwBA,CDxBD,ADeA,AOEA,INjBI,ADeA,AInBO,AGqBP,CFrBD,AEqBE,GCjBD,EReM,CAAC,C4BrBL,CxBEc,EJmBL,AQfJ,CReK,AInBO,AwBFb,GAAG,ApBME,CAAC,CoBND,EpBMI,ADiBI,CPFC,AQfJ,ADiBI,CPFC,AQfJ,CReK,AQfJ,CReK,AQfL,IReS,CAAC,AOEA,CAAC,EAAE,CPFC,CInBA,CAAA,AKQf,ITWqB,CAAC,MAAM,EAAE,EAAE;ADfvD,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AMAA,AEAA,ADAA,AjBAa,AFHb,AKQA,APmBa,IDxBX,CIJC,GJIG,ADeF,AMfS,AEAT,ANwBS,AKPT,CCjBC,KReK,AOEA,IPFI,AOEA,EqBvBJ,G5BqBS,AOEA,CPFC,AESS,AKPT,CDjBU,AsBNhB,CAAC,C1B8BiB,CIxBC,GsBNb,GAAG,G1B8BkB,CIxBC,OAAe,EAAE,AJwBA,IKPZ,CAAC,CAAA,OqBvBjB,CtBMmD,AsBNlD,E5BqB2B,CAAC,A4BrBzB,C5BqByB,A4BrBxB,CAAA;A7BMpC,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AMAA,AEAA,ADAA,AlBJA,CAAC,CAAA,EJIC,AKAA,AJwBA,CFTC,AOEA,EE/BE,CRcC,AOAF,GFAK,GAAG,GsBNH,ApBMI,MFAQ,AEAF,CFAG,AEAF,CAAM,aFAU,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAA,IJwBK;AHxBhE,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AMAA,AEAA,ADAA,AlBHA,GIQG,CRLD,ADgBA,AMfA,AGfO,APsCP,AKNA,INlBI,ADgBE,AMfA,IsBPF,ApBMA,CoBNC,ApBMA,CRgBO,AMfA,EEDJ,CRgBO,AMfA,KNeK,CAAC,ES9BA,CT8BG,CAAC,CS9BzB,ET8B4B,CAAC,AMfA,CEDb,CAAC,CAAC,CAAC,CFCe,AEDf,CRgBgB,CAAC,AS7BlC,CT6BkC,EEQC,IIvBM,CAAC,CAAC,AGdjB,CHckB,CGb5C,aHa0D,CAAC,GGb1B,EACjC,GHYmE,EAAE,GAAG,AGZhD,EACxB,EHW4E,CAAC,ACiBF,CDjBG,CAAC,EAAE,CAAA,UGX/C;AVUtC,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AMAA,AEAA,AfKA,IRLE,ADgBA,AMdA,AJsBA,AKNA,INlBI,AKEE,AGXJ,CmBGC,CAAC,C5BsBG,A4BtBH,ArBwBG,CDhBG,AGXF,ADUJ,ENuBM,CItBG,CEDL,CAAC,ANuBI,CMvBH,ENuBM,CAAC,CFRC,CAAC,GQfD,CAAC,CFCA,CNcM,AMdL,CNcM,AOER,CE3BS,AF2BR,CCjBK,CAAC,CReK,ASzBA,CHWJ,CNcM,CEQC,AKNR,CPFS,AMdL,AEDC,ANuBI,AKNR,EE3BU,CAAC,CDUH,CCIZ,CTWkB,AOER,CPFS,AMdL,ACgBH,CDhBI,AEDC,ADiBJ,CDhBI,AEDC,CNuBK,CFRC,AEQA,CAAA,CFRE,CQfH,CReK,AQfJ,EFCC,CAAC,AGXK,CAAC,IHWD,CAAC,AEDC,CReK,AMdN,CNcO,AQfJ,CReI,CSzBE,CAAC,AF2BhB,CE3BgB,AF2Bf,CAAC,EAAE,EAAE,CAAC,EAAE,qBAAa,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,gBAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;APD9F,ADjBA,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AMAA,AEAA,AjBkBA,CPFC,AOEA,CPFA,AOEA,ENlBC,AKEA,AJsBA,IDxBI,AKEA,AsBPF,AnBHA,APgCE,GItBG,CsBPC,EtBOE,CGVD,CDSH,CAAC,CFCO,AsBPA,A1B6BA,CItBA,AGVD,CDSH,CoBNO,E1B6BE,E0B7BgB,AnBHhB,CmBGgB,ApBMnB,CAAC,ANuBM,IAAI,OMvBC,CAAC,CAAC,CAAC,ANuBM,CMvBN,ANuBO,MO9B7B,AP8BmC,KAAK,EAAE,IAAI,QO9B3B,GACnB,aP6B8D,CAAC,GO7B9C,GAEtB,IP2B8E,CAAC,EAAE,CO3BzE,EACR,kBAAkB,CACnB,CAAA;ATmBL,ADlBA,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AMAA,AEAA,AjBmBA,GFtBG,CJGD,ADiBI,AMdJ,AGJA,CAAC,GRCG,A2BLF,A1B6BA,CIrBG,GsBRC,CtBQG,AEFJ,CFEK,CNcK,AEON,EIrBI,CNcK,AMdJ,AsBRF,CAAC,CtBQG,CAAC,EsBRA,CtBQG,CsBRD,A1B6BA,CAAA,EFPQ,CAAK,EAAE,AMdP,CNcY,AMdX,ENca,IMdP,EAAE,CAAC,EAAE,CNcqB,CMdnB;APH3C,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AMAA,AEAA,AnBHa,GDAV,CHGD,ADiBA,ASjBe,CPwBd,GDxBG,ADiBA,AMdF,ADNS,ICML,AsBRF,ApBOA,IAAI,CReK,A4BtBL,AvBEY,CLoBP,A4BtBJ,EtBQK,ADNS,CCMR,AEDF,CoBPA,ApBOC,GFCK,AsBRH,CtBQI,AGHU,CHGT,CAAC,CGHtB,CHGwB,ADNQ,CAAM,AGKf,CFCG,CAAC,EEDA,EFCI,CAAC,CGHD,CHGG,AEDF,CAAC,GCFoB,GDEd,EAAE,EoBPjB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;A7BKvC,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AMAA,AEAA,ApBHa,IHGX,ADkBA,AKrBA,AH4BA,IFPI,AIrBO,AKGT,CmBLC,C1B8BG,CG5BC,CCMH,AGHE,CRAG,CCyBC,CItBH,CEDD,CAAC,CRgBO,CMfH,AGHE,APyBE,CFPC,AQhBN,ANuBM,EE5BS,EKGP,CLHU,ACAf,CCMK,ADNJ,CCMK,ADNJ,CCMK,ADNJ,CCMK,ADNL,AIGO,CHGD,KFNe,EKGN,CLHc,AIKzB,CCFa,ADEZ,CJL0B,AIKzB,CFCW,AEDV,CAAA,CFCY,CAAA,EFN0B,OF4BZ,CAAC,CAAA;AHzBpD,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AQAA,AnBHA,AH4BA,CG5BC,AH4BA,CG5BA,AH4BA,CKNE,CNnBD,AGHA,IHGI,ADkBF,CMfC,EFNI,CKGH,IAAI,ADEF,CRgBK,GAAG,EQhBF,CACJ,GReY,CAAC,CIrBL,AIMH,CJNI,AIMH,ECHK,CTkBO,AIrBN,AKGA,CTkBO,CIrBL,CJqBO,AQfT,CReU,CAAA,ESlBH,ADGH,CJNI,AKGA,ADGH,CCHI,ADGH,CJNI,IAAI,AKGA,CLHC,AKGA,ADGH,CJNG,CKGE,ADI7B,eAAa,KAAK,CAAC,IAAI,4BAAuB,KAAK,CAAC,MAAM,WAAQ,CACnE,CAAA;ATLT,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AQAA,ApBHA,ACCA,AH4BA,AKPa,CHtBZ,CAAA,EHGC,A2BNA,CAAC,EDsBE,C1BhBC,ADkBF,AOCS,KDjBF,AEGJ,GCLC,CTkBK,CAAC,AOCS,CPDR,CAAC,COCU,EPDP,ASlBJ,CTkBK,CAAC,KAAK,COCS,CPDP,CAAC,CAAC,AOCgB,CPDf,GSlBL,CTkBS,ASlBR,CTkBS,CAAC,CAAC,IAAI,CAAA,OSlBJ,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA;AVAvD,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AQAA,ApBFA,IHEE,A2BLA,ArBwBA,AoBHA,I1BhBI,ADkBF,AOCI,CPDH,CAAC,COCK,CDjBL,CGFC,CFmBe,CDjBb,EEEI,EFFA,ENgBI,AQdA,CRcC,AQdA,CAAC,EmBaf,CrBfgB,CAAC,CNgBG,AMhBF,AEEE,CFFD,AEEE,AmBawC,C3BCvC,AMhBH,ACiBO,CAAC,AoBD3B,G3BA0B,AOCI,CAAC,AoBDF,C3BAD,AOCG,EPDD,AQdA,CRcC,CAAC,EQdE,CAAC,CRcC,AQdA,CRcC,KQdK,IRcI,CQdC,CRcC,AQdA,CRcC,AQdA,CRcC,CAAA,EQdG,KAAK,CAAC,MAAM,EAAE;ATJvE,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AQAA,IvBAE,AMoBA,CPFC,GClBG,A0BgBF,CrBdC,GGDC,IDGE,ECHI,IAAI,ADGF,CACJ,ICJW,CAAC,ADIP,CAAC,AmBWZ,EAAA,InBXkB,KAAK,AmBWsC,CnBXrC,CAAC,KCJU,CDIJ,EACzB,ECLkC,aDKrB,KAAK,CCLgC,ADK/B,CCLgC,CAAA,EDK5B,MDc8C,4BCdjB,KAAK,CAAC,MAAQ,CACnE,CAAA;ATPT,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AQAA,GnBFG,CJED,AMoBA,CDlBC,GLFG,AMoBA,AoBJF,C3BCK,AShBJ,EFmBI,CAAC,CCbH,KDaS,KAAK,EAAE,EAAE,EoBJrB,EAAA,SAA6B;A5BhBjC,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AQAA,AnBFa,IJEX,AKGA,ILHI,ADiBF,AKnBS,AIIT,AFkBA,AoBHA,GrBdK,CGDD,ADMF,EFLM,ADLO,AEsBT,CDjBE,CEKF,CRSG,AKnBS,AGUX,CDYG,EPHE,AQTF,CAAC,CAAC,CAAC,ADYE,CAAC,EPHE,AQTF,CRSG,AKnBQ,AIIZ,ADME,CHVgB,AIIjB,ADMC,IRSO,CAAC,ASfJ,CAAC,CTeK,CAAC,ASfJ,CTeI,aOGc,CAAC,CAAA,gBoBHiB;A5BjBhE,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AQAA,AlBGA,CAAC,CAAA,CFLE,AF4BA,CD1BD,AIFA,CAAC,AEsBA,GNpBG,ADiBF,AKnBE,AGUF,AmBSA,CnBTC,GCNC,AkBeE,IAAI,C3BAC,A2BAA,C3BAC,CAAC,ASfF,CTeG,GAAG,A2BAA,CtBnBL,CAAC,AsBmBM,CtBnBL,CLmBO,AKnBN,CLmBM,AKnBN,MIIO,CAAC,KAAK,CAAC,CAAA;AVF/B,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AQAA,AlBIA,AFNa,AF4BA,ID1BX,AIFA,AEuBA,GqB1BG,C3BKC,ADiBF,AInBS,AIWT,ANiBS,AKLP,CPJD,ASfA,AFmBE,CPJD,CKnBG,CEuBC,AoBJJ,CvBnBY,CIWR,CAAC,ADYE,CHvBQ,AGuBP,AoBJJ,EpBIM,CAAC,CAAA,AoBJH,C3BAG,AKnBE,AsBmBJ,C3BAG,AKnBE,EH4BS,EE5BC,AuBmBV,CvBnBgB,AF4BJ,CFTR,CQRC,CRQC,AKnBE,AGWF,AmBQF,CtBnBK,GLmBC,AQRA,AmBQF,CAAC,C3BAG,AQRA,CNiBS,CFTP,CAAC,CAAC,CQRC,CAAC,CmBQD,C3BAG,CAAC,A2BAF,CnBRG,CNiBiB,CMjBf,MRQM,EAAE,CAAC,CAAC,CAAA;ADjBtD,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AQAA,IvBAE,AGFA,AwBHA,A1B+BA,AKLA,CHvBC,GHEG,ADiBF,AInBE,AKKF,CTcC,AKnBA,CLmBC,CESG,CMjBH,ECNI,CJLC,CAAC,AsBmBJ,CvBnBO,ACAF,AH4BE,CE5BC,ACAF,AIKA,APuBE,GFTC,CAAC,AQRF,ANiBI,AyBTN,ClBdK,APuBE,COvBD,ADMF,EmBQA,E3BAM,AQRF,ERQI,C2BAH,CvBnBO,AF4BA,AyBRpB,CvBpBqB,AF4BA,CFTD,AInBE,AwBH1B,CxBG2B,CJmBD,AInBC,CwBH/B,C5BsBgC,CAAC,CAAC,IAAI,CAAC,ASdF,EmBRhC,E1B+BwC,COvBH,APuBI,EKLE,EPJA,EAAE,EAAE,CAAC,CAAA,AESG,CAAC,E0B/B7B,E1B+BiC,CAAC,GOvBJ,CAAC,CAAA,KPuBa,CAAC,CAAC,CAAC,CAAA,8CyBR2B,CAC/F,CAAA;A5BnBT,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AQAA,AtB0BA,CAAC,CAAA,ED1BC,AGFA,AKKA,AFkBA,CPJC,ASdA,GRHG,AGFA,AwBJC,ArB2BD,CFvBD,AEuBE,GCZD,ADYI,CHvBC,AuBqBJ,CpBEK,CFvBD,CDAG,AGuBA,CHvBC,ACAF,CDAG,ACAH,CDAI,CAAC,CAAA,GIWA,EAAE,IAAI,WoBfjB,EAAA,uBAAuB;A7BM9B,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AQAA,AnBFA,AH6BA,CG7BC,CAAA,EJEC,ADkBA,AIpBA,AKyBA,IRvBI,A2BNF,ArB2BA,CAAC,EPHI,AIpBA,CAAC,AwBJF,ApBeF,AmBWA,CvBtBK,AGuBF,ECZA,ADYE,CAAA,AoBDD,CnBXC,AmBWA,EvBtBM,CJoBC,CAAA,CIpBE,CAAC,AIWJ,CmBWC,GvBtBO,AuBsBJ,CC1BG,GD0BC,CvBtBK,AwBJF,AD0BF,CvBtBK,GwBJC,CAAC,CD0BD,CAAA,EvBtBO,CwBJD,CxBIG,GwBJC,ExBII,EwBJA,CxBIG,AwBJF,ExBII,GwBJC,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE;A5ByB7E,ADnBA,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AQAA,AnBDA,CLmBC,CAAA,CMdE,CLJD,CMqBC,GNrBG,AGFF,CAAC,AuBsBA,GvBtBG,AwBJF,ApBeA,CJXG,CAAC,CIWD,EAAE,EJXI,CAAC,CAAC,CAAC,CAAA,AIWD,wDoBfwD;A7BMzE,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AQAA,AlBIa,ILJX,AMsBA,INtBI,AKIO,AFNT,CIWC,CAAC,CAAA,ADaG,CqB5BH,CxBIG,AuBqBE,GvBrBC,AwBJA,CxBIC,CAAC,CAAC,CAAC,CAAA,EwBJG,GAAG,ItBUa,GAAG,QsBVV,CAAC,CtBUkB,KsBVZ,CAAC,CtBU0B,AsBVzB,EtBU2B,EsBVvB,CAAC,KAAK,EAAE,ItBUsC,AsBVlC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;A7BM1E,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AQAA,IvBAE,AKIA,CFNC,GHEG,AOUF,ADYA,CAAC,EDlBI,ACkBF,CqB5BD,ApBgBE,ADYA,AoBHF,ICzBI,ADyBE,CCzBD,ApBgBE,CAAC,GoBhBC,ADyBE,CCzBD,EDyBI,CnBTC,EAAE,CmBSC,CCzBD,ADyBE,CCzBD,CAAA,EtBUD,CAAC,AqBeM,CAAC,CAAC,CAAC,IrBfF,AqBeM,CrBfL,AqBeM,IrBfF,CqBeO,CAAC,CAAC,CAAC,SAAS,CAAA,WrBfF,CAAC,OAAO,EAAE,cAAc,CAAC,KAAK,OAAO,CAAA;APJ1F,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AQAA,AlBIA,CAAC,CAAA,ELJC,AGFA,IHEI,AMsBF,CqB5BC,ArB4BA,EHxBI,AGwBF,CHxBG,AIYJ,AmBSA,CvBrBI,CGwBA,CAAC,CCZD,AmBSE,CnBTD,GDYK,CAAC,CCZD,ADYE,CCZD,CDYG,AoBHA,EpBGE,CCZD,ADYE,AoBHA,CnBTD,GAAG,AmBSE,CAAC,InBTE,CAAC,GmBSK,CAAC,CAAC,CAAC,CnBTD,CAAA,EmBSK,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,CAAA;A5BnBnE,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AQAA,AlBKA,AFPA,CAAC,CAAA,CCCE,AH4BA,CD3BD,GQuBG,CRvBC,A2BLF,ArB2BA,CCZC,ADYA,EAAE,CoBFD,EpBEI,CqB3BC,ArB2BA,CoBFD,CAAC,GpBEK,CAAC,EAAE,CoBFD,CpBEG,EAAE,AoBFF,CpBEG,GoBFC,CCzBR,IAAI,YAAC,UDyBS,CAAC,KCzBM,ADyBD,CCzBE,CAAA,ADyBA,QAAQ,CAAC,CAAA;A5BpBhD,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AQAA,ApBFa,ACCA,AH4BA,ID3BX,A2BLA,AnB4BA,CmB5BC,ArB2BA,CAAA,ENtBG,AGFO,ACCA,AGYT,ANgBS,CyBPR,QtBrBiB,CDDC,ECCE,CDDC,EIaP,KNgBc,COJvB,CJxBwB,CAAM,AH4BJ,COJlC,CJxBwC,CDDX,CAAA,ICC0B,EH4BZ,COJlC,KAA+B,IPIqB;AH3B/D,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AQAA,ApBDA,AGuBA,CAAC,CAAA,ENtBC,A2BLF,AvBIE,AH4BA,CG5BC,GJCG,AIDA,AIwBF,ADZA,ANgBE,AyBNF,IlBEI,ADZA,KAAK,CAAC,ANgBE,COJD,APIE,IMhBE,CHZL,AIwBM,CJxBL,AGYM,ANgBE,C0BhCtB,AvBIe,CAAC,CAAA,AsBsBO,ClBEC,CPIG,EAAE,EAAE,GOJC,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AVvBhE,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AQAA,AINA,ArB6BA,CqB1EA,AA6CC,CA7C4C,E3BmD3C,AIDA,IJCI,AIDE,AH4BJ,AyBNA,ItBtBQ,AIwBN,ADZA,AmBUI,EzBMA,CG5BK,CIwBL,CAAC,CDZC,ANgBE,AyBNE,CnBVH,EmBUM,ECxEqC,A1B8ErC,CAAC,CG5BK,CuBLxB,AvBKyB,GIwBH,GAAG,CDZC,CHZO,AGYN,CHZO,GIwBH,ADZA,CCYC,CDZC,KAAK,CAAC,KAAK,EAAE,CCYC,CAAC,APIE,CAAC,CAAA,GOJE,CAAC,CAAA;AVvBvD,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AQAA,GlBKG,CLLD,CC2BC,GD3BG,CIDD,AIwBA,GkBFC,GtBtBK,CAAC,AGYJ,CHZK,CAAC,QGYI,EAAE,KAAK;ATXzB,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AQAA,AlBKa,GFNV,CHCD,AC4BA,ID5BI,AKKO,CDNR,EH6BI,EONE,EJvBA,CGYH,AmBUA,CtBtBK,AIuBE,APMA,CG7BF,AH6BG,EyBPJ,EzBOQ,AyBPN,CrBhBc,AJuBP,CONC,EHjBS,EEMX,CCWO,AkBDN,CnBVC,ICWU,ADXN,ANiBM,CAAC,CIvBO,IAAY,EAAE,AGiBd,EAAE,GHjByB,QJuBd,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;AH5BnF,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AQAA,ApBDa,AF6Bb,CAAC,CAAA,CKLE,CNvBD,AKKA,ADNA,IJCI,AKKA,AFNO,ACAP,GCMG,CGiBH,EJvBM,EDAS,AKuBT,ADXJ,AmBUA,GvBtBgB,ACAP,AGYN,EAAE,CmBUC,CtBtBO,CIuBD,AkBDJ,CtBtBO,CsBsBL,CrBhBD,AGiBM,ADXJ,CFND,AGiBM,CLvBS,CAAM,EEMjB,CAAC,CAAA,KGiBY,EAAE,SAAS,EAAE,WAAW,EAAE,gBAAgB,CAAC,CAAA;AVtB9E,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AQAA,AtB6BA,AKNa,INvBX,AKKA,AFNA,IHCI,AKKE,AFNF,ACAF,AEwBS,CHxBN,GKuBD,GHjBS,AFNF,ACAF,CDAG,AIYN,AmBUA,ClBCkB,CHjBR,CEMP,EAAE,CFNS,EAAE,AFNF,AGwBO,CDlBJ,AFNF,AuBsBN,CvBtBO,CAAC,AKuBS,ADXf,ADYa,AoBFb,EvBtBQ,AKuBD,CHjBI,CAAC,AqBgBR,CrBhBQ,ADNX,CAAC,IAAI,AEyBvB,CAAS,CFzBgB,CE0BzB,CF1B2B,AE0BlB,CF1BmB,CAAA,AE2B5B,CAAS,EACT,IELgC,EAAR,UFKQ,EAChC,OAAgB,GENgB,EAAR,IAAQ,EAAE;AVtBpC,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,IfAE,AKMA,ACoBA,CF3BC,GJCG,AKMA,AFPF,IAAI,CIYD,CAAC,CFLK,AEKL,CFLM,AGeH,AkBAH,CvBtBK,CAAC,EKsBG,EHfG,CqBeL,CrBfO,CFPD,AKsBC,AkBAL,CrBfO,AFPF,CAAC,CAAC,CuBsBH,CvBtBK,OG2BxB,EAAA,GELoB,EkBAK,CAAC,EAAE,CAAC,cpBKG;AR1BlC,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,IfAE,AM4BA,IN5BI,AKMF,ACsBI,CF9BC,AGaJ,GJZC,CAAC,AuBsBA,GvBtBG,AKsBF,IAAU,ELtBF,CAAC,EKsBO,AFOC,CEPA,CLtBJ,CAAC,AG6BM,CH7BL,CAAC,CAAA,AKsBM,CAAC,AFOC,EAAE,CAC9B,EERgC,SAAS,EAAE,kBHfe,mCCuBQ,EAClE,EAAE,CACH,CAAA;AR/BH,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,IfAE,AOWA,ADoBA,CCpBC,CAAC,CAAA,CPXE,AKMF,ADRA,AEiCI,CHhCH,GuBsBC,GtBvBK,IAAI,AEiCI,CFjCJ,AIuBL,EFUY,IEVN,AFUU,EAAE,CAAC,CEVT,KAAK,CAAC,2BHfiC,YGeI,KAAO,CAAC,CAAA,aFUwB,EAAE,EAAE,CAAC,CAAA;AR/BpG,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,IfAE,AOYA,ADoBA,CFlCC,GJEG,AKMF,AC0BE,CAAC,CAAC,GHlCG,EEQA,CC0BG,AoBXN,CvBvBO,AKuBN,GkBAG,CpBWO,CoBXL,CpBWO,CHlCC,CAAC,EGkCE,CAAC,CD1BR,AC0BS,CD1BR,AFRS,CEQR,CqBeI,GrBfA,AC0BS,ED1BP,CFRU,CIcC,CJdC,AGkCA,CD1BR,CAAC,AC0BS,CD1BR,CAAC,AC0BS,KD1BJ,CAAC,CAAC,EAAE,CAAC,CAAA;APN3C,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AXFA,CAAC,CAAA,EJEC,AOYA,CFNC,GLNG,AOYA,ADoBF,IHlCE,AIcI,CCSH,CDTK,CDoBD,CHlCD,AuBuBF,IpBWQ,CAAA,CoBXF,EAAE,CvBvBG,CAAC,AuBuBF,WvBvBa,CAAC,CAAC,CAAC,EAAE;ALEpC,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AXDA,GH8BG,CD7BD,AKOA,CCyBC,GNhCG,AOYF,ICSE,ADTE,IJdA,AKuBE,AkBAF,CvBvBC,AKuBE,EDTI,CJdH,GIcO,EmBSF,CvBvBC,CAAC,AuBuBA,CnBTK,CCSD,ELvBA,AuBuBA,CvBvBC,AKuBE,IDTM,CCSQ,CAAA,ADTN,GJdD,CAAC,IESU,KFTD,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAA;ALEhF,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,Ad6Ba,ID7BX,AKOA,AC0BA,INjCI,AC6BO,AKIP,CEZD,AFYE,ED1BE,CEKH,CJdC,GIcG,AmBSF,GnBTK,ImBSE,ErBdC,AEKG,AmBSF,CrBdA,AEKG,ANiBW,CItBb,AC0BO,CAAC,CLJQ,AyBRb,CnBTG,CFLF,AEKG,EFLD,MAAM,AJsBa,CItBZ,AEKG,CAAC,GFLA,AqBcR,CrBdS,AqBcR,EAAE,CpBYgB,AoBZf,CzBQ8B,AKId,CAAC,CLJe,CItBpB,AC0BO,CD1BN,EEKK,CAAC,ANiB0B,GKInB,CD1BN,AEKG,ADqBI,CCrBH,ADqBI,CD1BN,CAAC,AEKG,ADqBI,CD1BN,CAAC,CAAC,EEKK,CAAC,CAAA,CFLD,CAAC,CAAC,EAAE,CAAC,CAAA;APPnE,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AVOA,CAAC,CAAA,ELPC,AC6BA,ID7BI,AMiCF,CCrBC,ENiBI,EOTE,AkBCJ,EpBYI,EHpCE,AFgCE,CAAC,EKIA,CAAA,CLJI,CAAC,SAAS,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,CAAC,CAAA;AH7BtF,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AVQA,AJqBA,CAAC,CAAA,CG9BE,CJCD,CMiCC,GNjCG,AOaF,ICOE,ADPE,AmBQF,IvBxBE,EKuBI,ADPE,CAAC,GJhBD,AKuBE,ILvBE,CKuBG,ADPE,CCOD,ADPE,GJhBD,CACb,AIekB,CAAC,EAAE,aCOW,CAAC,CAAA,8FLtB6E,CAAG,CAClH,CAAA;ALCT,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AXDa,AH+Bb,ID9BE,AMkCA,INlCI,AIDO,AEmCL,CEdH,EFcM,CCrBL,CJdC,CGmCW,CFnCE,CGcV,AmBQF,EtBtBe,AEmCD,CCrBT,CDqBW,AoBbZ,CpBaa,CCrBT,ADqBU,AoBbZ,CnBRG,ADqBU,CAAA,IFnCK,CAAY,AGcrB,CAAC,EmBQA,EnBRI,CAAC,CAAA;ATb7B,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,IfAE,AIDA,AEmCA,INlCI,AQoBF,AFcI,CHnCH,AIcA,EHdI,AEmCE,GAAO,CEdP,CkBCH,EpBac,CEdP,CAAC,AFcQ,CAAC,AoBbZ,CpBaa,CAAC,AoBbZ,CpBaY,CFnCZ,CAAC,EsBsBI,CtBtBD,CAAC,EIqBQ,CAAA,GJrBF,CAAC,CAAC,CAAC,CAAC,CAAA;ANC9B,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AXDA,CAAC,CAAA,EJCC,AQoBA,AFeA,CEfC,GRpBG,AOcF,ADqBE,GAAG,CCrBD,ADqBE,CHrCC,GuBuBH,CvBvBO,AIgBF,CAAC,ADqBE,EAAE,EoBdJ,EvBvBQ,AGqCA,AoBdN,CvBvBO,AIgBF,CAAC,AmBOJ,CpBcO,CAAC,EHrCE,AIgBF,ADqBE,CCrBD,ADqBE,ECrBA,KJhBO,EAAE,EGqCE,CAAC,IAAI,GAAG,CAAC,MAAM,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,WAAW,CAAC,EAAE;ARnClF,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,IfAE,AQqBA,IRrBI,AMmCF,IHrCE,AIgBA,CJhBC,EGqCI,CHrCD,AIgBA,AmBOF,InBPM,ADqBE,CCrBD,ADqBC,IHrCG,AuBuBF,CvBvBG,CIgBC,AmBOF,GnBPK,CmBOD,GnBPK,CAAC,EJhBE,CAAC,CAAC,CAAC,CAAA,CIgBE,CAAC,MAAM,EAAE;ATd7C,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,GVQG,CLRD,CMmCC,GNnCG,CGFD,OIgBG,AmBOA,MnBPM,CmBOC,EAAE,CnBPC,GmBOG,EnBPE,CAAC,YmBOG,CAAC,EAAE,CAAC,gBnBPyB,CAAC,CAAA;ATdzD,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AVQa,ILRX,AMoCA,INpCI,AKQO,AC4BP,KHvCK,AIiBJ,AmBOA,IvBxBQ,CAAC,KAAK,CEWQ,AC4BP,GD5BU,AFXP,CGuCC,GHvCG,AGuCA,CHvCC,AGuCA,GAAG,CAAC,CD3BhC,AFZiC,IEYZ,EACrB,GFb0C,CEarB,CFbuB,CEc5C,ICyBiD,CAAC,GDzBzB,ECyB8B,CAAC,EAAE;ARpC5D,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,Gd8BG,CD9BD,AKYA,GGSG,CRrBC,AKYE,ACwBJ,IHvCE,AIkBA,AmBMA,CvBxBC,EEeQ,ACwBJ,CHvCD,EEeQ,ECwBF,CAAA,CHvCA,CAAC,WEeS,AFfE,CEeD,AFfE,CAAC,CAAC,CAAA,CEeA,CAAC,CAAA,SEGY;ATf5C,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,Ad8Ba,ID9BX,AKYA,AGSA,CFeC,GNpCG,AKYE,AJkBK,CEjCR,GIkBC,GFHS,CEGL,AmBMF,CnBNG,CFHO,EqBSN,EAAE,EnBNI,CAAC,CNeY,AyBTb,GzBSgB,GOTrB,EHTa,CAAC,AGSzB,ADNkB,CAAC,EAAE,CFHQ,AEGP,ANemB,CIlBX,CAAA,IGSlB,IPS+C,EAAE,EOT1B,GPSuC;AH9B5E,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,IfAE,AKYA,AJkBA,AKOA,INrCI,AKYE,AGSJ,GPSK,AKOA,CEhBD,CLzBG,AKyBF,EFgBI,CCtBL,ADsBK,AoBhBL,CvBzBO,AKyBF,APSE,COTD,APSE,CIlBG,AFhBF,CAAC,AImBN,CAAC,CFHS,AJkBF,CAChB,CEnCkB,CAAC,AImBN,AmBMA,CvBzBO,AImBN,CJnBO,AuByBN,EvBzBQ,EuByBJ,CzBUV,CMhBY,ANgBX,CMhBY,CAAC,CAAC,CAAC,CFHC,AGSI,CHTH,AGSI,CDNH,OFHO,AGSI,CHTH,AGSI,CHTJ,CGSM,CPUd,CAAC,IMhBO,CAAC,CAAC,CAAC,CAAA,ENgBA,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAClF,CAAA;AHhCH,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AdgCA,AKKA,CLLC,AKKA,CLLA,AKKA,ENrCC,AKaA,ILbI,EKaE,CAAC,CFjBH,AKyBA,ADNA,CJnBC,AImBA,CAAC,CAAA,CJnBE,AuByBF,CvBzBG,CEiBK,AFjBJ,AKyBA,CHRK,GGQD,AkBAF,EAAE,CrBRO,CqBQL,ClBAG,CAAC,CLzBC,CEiBK,AFjBJ,EEiBM,CAAC,CAAA,EFjBD,CAAC,CAAA,IKyBG,QAAQ,gDAA6C,CAAC,CAAA;AVrBxF,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AdiCA,AKKA,INtCE,AKaA,ILbI,CGJD,AKyBA,ADNA,CFFG,CAAC,KqBQD,ErBRQ,CAAC,IqBQF,ErBRQ,AqBQN,IAAI,CrBRO,EAAE,CAAC,CAAA,UqBQJ,CAAC,EAAE,CAAC;A5BrB/B,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,IfAE,AKcA,ILdI,AKcE,AGOJ,IAAI,CL1BG,AImBA,AmBOJ,ErBPQ,EFnBA,AImBA,CFAG,AFnBF,CAAC,AK0BF,GAAG,EDPI,EJnBE,CK0BD,CL1BG,AK0BH,ADPG,KAAK,CFAJ,CACvB,MAAM,AED6B,CFC5B,CED8B,KFCxB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,gBAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CACpF,CAAA;APhBH,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,IfAE,AKiBA,ILjBI,AQqBF,GHJK,CFtBH,AImBA,AmBOA,ClBAsB,GDPhB,EFGI,CAAC,GEHD,CCO2B,CHJrB,CAAC,AGIK,ADPT,CFGK,EAAE,CAAC,CAAA,CEHF,CAAC,IAAI,CAAC,GJnBG,CImBC,CAAC,CAAA,ECOR,qBAAe,EAAf,6BAAe,EAAf,IAAe,EAAE;AVrB7C,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AViBA,CAAC,CAAA,ELjBC,IAAI,IGLA,AKyBG,ADNH,CJnBC,GAAG,AKyBK,AkBCP,EnBPI,CAAC,CmBOD,EvB1BI,AuB0BF,CvB1BG,EKyBO,CDNJ,CJnBC,AImBA,CJnBC,CAAC,AuB0BF,CvB1BG,OAAO,AImBT,EJnBW,CAAC,CAAA,CImBF,OCMR;AVpBxB,AeCA,ADAA,AHAA,AEAA,ADAA,AKAA,AVkBA,ILlBE,IAAI,CGLD,GKyBC,IAAI,ADNF,AmBOA,InBPI,EmBOE,EAAE,ClBDG,CAAC,ADNJ,AmBOE,ClBDG,ADNJ,CCMK,KAAK,CDNH,CAAC,KAAK,CCMK,ADNJ,ECMM,EDNF,CAAC,KAAK,CAAC,CAAC;ATd3C,AeCA,ADAA,AHAA,ACAA,AKAA,GTsCG,CNtCD,IAAI,KGNK,GK0BH,AkBCA,IlBDI,ADPiC,CCOhC,GDPoC,CAAC,AmBQjC,EAAE,GlBDG,ADPiC,CAAC,AmBQjC,ElBDE,EDPmC,CAAC,GAAG,ECO/B,CAAA,CDPmC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;ATbhF,AeCA,ADAA,AHAA,ACAA,AKAA,ATsCa,GDpBV,AJeA,CDjCD,IAAI,AMsCO,IH5CP,IK0BE,ADPA,AmBQA,EvB3BI,EImBA,EJnBI,CK0BD,AkBCA,EAAE,ClBDC,ADPF,CJnBK,AImBJ,ADyBe,CH5CV,CuB2BD,ClBDC,AFkBa,CElBb,GDPE,CAAC,KAAK,ADyBc,CCzBb,CJnBK,CAAC,CAAA,AuB2BV,CAAC,CnBRQ,CAAC,ADyBsB,AoBjB7B,CAAC,InBRW,CAAC,CAAC;ATb5C,AeCA,ADAA,AHAA,ACAA,AKAA,AVkBa,AJeA,IDjCX,AMsCA,INtCI,AKkBO,AJeA,AKKL,CH5CH,IK0BE,AkBCA,CpBiBO,GAAG,GC1B6B,CFMpB,EJeE,AKKL,CDpBM,AENqB,AD0B1B,CC1B2B,CNqBpB,EKKH,CACxB,CC3BoD,CAAC,GFMnB,EENwB,ANqBtB,CMrBuB,GAAG,CFMJ,GENQ,CAAC,CNqBb,EAAE,EMrBgB,CAAC,KAAK,CAAC,CAAA,ANqBH,QKMzC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAI,EAC9D,OAAO,CACR,CAAA;ARzCH,AeCA,ADAA,AHAA,ACAA,AKAA,IfAE,AKkBA,AJeA,AKQA,CH/CC,GHMG,AKkBE,CAAC,AGEJ,EPaI,AKQA,CDvBG,AENN,AmBSA,CnBTC,CAAC,CAAA,ENqBO,CAAC,IAAI,CAAC,CKQN,CDvBE,ACuBD,CDvBE,KCuBI,CLRQ,AKQP,CDvBE,AJeM,CIfL,CAAA,GCuBG,CAAC,CAAC,MAAM,ELRS,AKQP,CLRQ,MKQD,CAAC,CAAC,CAAC,CLRQ,AKQR,CLRS,IAAI,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,CAAC,CAAA;AHjCxF,AeCA,ADAA,AHAA,ACAA,AKAA,AdiCA,AKQA,CLRC,AKQA,CLRA,AKQA,ENzCC,AKkBA,AFxBA,IHMI,AQoBF,CDRC,EFMI,AFxBA,CEwBC,AFxBA,AK0BF,CHFG,AFxBD,AK0BD,GkBCD,GrBHS,CGED,AkBCJ,ElBDM,AkBCJ,ErBHQ,CAAC,GqBGH,CrBHO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;APlBjD,AeCA,ADAA,AHAA,ACAA,AKAA,AVkBA,AFxBA,AFwCA,AKQA,CDxBC,AFxBA,CEwBA,AFxBA,EHMC,IAAI,CM0CG,GEtBH,CDTK,GmBUH,ElBDI,GkBCC,ClBDG,CkBCD,IlBDM,CAAC,CFsBO,CAAC,AoBrBR,CpBqBiB,EAAE,OAAgB,YEtBb,QAAQ,mBAAgB,CAAC,CAAA;AVpBrE,AeCA,ADAA,AHAA,ACAA,AKAA,AVmBA,AFxBA,IHKE,AM0CA,IN1CI,CQoBD,EFsBI,CC/BH,ImBUE,EnBVI,AD+BI,CAAC,CAAC,CAAC,CC/BH,AD+BI,GAAG,AoBrBN,CpBqBO,CC/BH,AD+BI,AoBrBN,CnBVG,ED+BM,CoBrBL,MpBqBY,GAAG,EC/BF,AD+BI,CC/BH,AD+BI,CC/BJ,AD+BK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA;AR1ClD,AeCA,AJAA,ACAA,AKAA,AT0CA,CAAC,GN1CC,AQoBA,CAAC,GRpBG,COWD,OmBUG,OAAO,EAAE,IAAI,eAAM,CAAC,EAAE,CAAC;A5BrB/B,AeCA,AJAA,ACAA,AKAA,AT2CA,GDxBG,CLnBD,AQqBA,CDVC,GPXG,CM2CG,IoBtBF,cpBsBoB,CAAC,QAAgB;AR3C5C,AeCA,AJAA,ACAA,AKAA,AVmBa,AERb,CAAC,CAAA,EPXC,AM2CA,IN3CI,AKmBO,GCwBJ,CoBtBH,OpBsBW,GDxBU,ECwBL,CDxBQ,ACwBP,IAAI,MDxBY,ECwBJ,KAAK,CAAC,CAAA,CDxBgB;APnBzD,AeCA,AJAA,ACAA,AKAA,AT2CA,CAAC,EHhDE,CHKD,AKmBA,ILnBI,GKmBG,KqBED,IrBFU,AqBEN,CrBFO,CqBEL,GAAG,YrBFkB,CAAC,UAAU,CAAC,CAAA;APnB/C,AeCA,AJAA,ACAA,AKAA,AVmBA,AFxBa,CEwBZ,CAAA,CJeE,CDlCD,IAAI,AGLO,QuB0BL,GvB1BgB,GAAG,GuB0BV,EAAE,IAAI,CvB1Ba,GAAW;ALK/C,AeCA,AJAA,ACAA,AKAA,AVoBA,AJca,IDlCX,AGLA,GK0BG,CRrBC,ACkCO,GEvCJ,IAAI,CuB0BL,CvB1BO,CAAC,KuB0BD,CzBac,CyBbZ,EzBae,EyBbX,KvB1BG,CAAC,EFuCgB,CEvCb,CAAC,CAAC,CAAC,GuB0BJ,CAAC,CzBa8B,CyBb5B,CzBa8B,AyBb7B,CvB1BQ,EAAE,CAAA,MFuCuC;AHlChF,AeCA,AJAA,AMAA,AZLA,CAAC,CAAA,EHKC,AQqBA,APaA,IDlCI,GCkCG,EyBbF,IzBaQ,CAAC,IAAI,CAAC,SAAS,CAAC,GObd,GAAf,UAAgB,APa6B,CAAC,OObN,EAAE,CPac,CAAC,IAAI,CAAC,MObG,GPaM,CAAC,EAAE,UAAU,CAAC,CAAC,CAAA;AHlCxF,AeCA,AJAA,AMAA,AZJA,AFsCA,CAAC,CAAA,EDlCC,IAAI,AQqBF,IkBAE,SlBAW,GAAG,aAAa,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,aAAa,CAAA;AVrBtE,AeCA,AJAA,AMAA,AdmCA,IDnCE,IAAI,AQqBF,IAAI,CAAC,GkBAD,IAAI,ClBAK,CkBAH,ClBAK,EkBAF;A5BrBjB,AeCA,AJAA,AMAA,IfAE,IAAI,IQqBA,IAAI,AkBAF,ClBAG,IAAI,CAAC,AkBAF,EAAE,EAAE,KlBAO,EAAE;AVrB3B,AeCA,AJAA,AMAA,GVoBG,AFxBA,CHID,IAAI,QQqBE,AkBAA,MlBAM,GkBAG,ClBAC,CkBAC,IlBAI,AkBAA,ClBAC,iEAAiE,CAAC,CAAA;AVrB1F,AeCA,AJAA,AMAA,AVoBa,AFxBA,IHIX,IAAI,AKoBO,AFxBA,KKyBN,GkBAC,GvBzBgB,EEwBE,CFxBC,EEwBE,CqBCZ,EAAE,IAAI,CvBzBa,EEwBE,CFxBS,QEwBQ,EAAE,QAAyB;APpBlF,AeCA,AJAA,AMAA,IfAE,AKmBuD,AFvBvD,GAAG,CHIC,EGJE,MuByBA,ClBDK,MkBCE,EAAE,CvBzBD,CAAC,EEuBwC,AqBEpC,CvBzBD,CEuBqC,AFvBpC,CAAA,YuByBM,CAAC,ErBFsD,AqBEpD,CAAC;A5BrB/B,AeCA,AJAA,AMAA,GdmCG,CDnCD,AKmBA,AFvBA,IHII,AKmBA,GFvBG,EuByBF,EvBzBM,CKwBL,CHDO,CAAC,AFvBA,GAAG,CAAC,EEuBE,AGCN,GAAG,EHDQ,CFvBC,CEuBC,AFvBA,AKwBN,CAAC,CHDO,GFvBG,CAAC,CAAA,GKwBF,CAAA;AVpBjC,AWCA,AMAA,AZJA,AFuCa,CEvCZ,CAAA,EHIC,IAAI,AKmBF,AJgBS,IyBdP,ClBDC,UPeqB,GAAG,UAAS,IIhBJ,KJgBqB;AHnCzD,AWCA,AMAA,AZHA,IHGE,ACmCA,IDnCI,AKmBF,CGCC,MHDM,CqBEH,IAAI,EAAE,ErBFM,CAAC,AqBEJ,erBFmB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,AJgBE,EIhBA,SAAS,CAAC,CAAC,CAAC,CAAA;APnBlF,AWCA,AMAA,IfAE,ACmCA,CIhBC,GLnBG,ACmCA,KOhBK,GkBEH,ClBFO,APgBA,CAAC,IyBdF,EzBcQ,AyBdN,EAAE,GzBcS,COhBC,CPgBC,GOhBG,CAAC,APgBA,IOhBI,CAAC,IPgBI,CAAC,MAAM,KAAK,EAAE,EOhBE,APgBA,COhBC,QAAQ,CAAC,EAAE;AVnBtE,AWCA,AMAA,IfAE,AKoBA,ILpBI,AKoBA,AJeF,CIfG,GGDD,GPgBK,CyBdH,CrBDO,CGDH,CHCK,CJeD,CAAA,COhBA,GkBEC,ElBFI,AkBEF,ClBFG,GkBEC,WlBFW,QAAQ,gDAA6C,CAAC,CAAA;AVnBxF,AWCA,AMAA,GZHG,CHGD,CCmCC,GDnCG,AKoBF,CGDC,MHCM,CqBCH,IrBDQ,CAAA,IqBCC,EAAE,IAAI;A5BrBvB,AWCA,AMAA,AZHa,IHGX,ACoCA,CIhBC,GLpBG,AGHO,AKsBT,GPiBK,IOjBE,CkBEH,EvBxBe,EFuCL,CEvCQ,AFuCP,EOjBA,AkBEJ,ClBFI,CkBEF,IAAI,EvBxBc,GAAW,EFuCZ,CAAC,OyBfR,CAAC,EzBeiB,AyBff,CzBegB,AyBff,IzBemB,CAAC,SAAS,CAAC,CAAC,CAAA;AHpC9D,AWCA,AMAA,AdoCA,CAAC,CAAA,EDpCC,AKqBA,AFxBA,AKsBA,CAAC,GRnBG,GKqBG,AFxBA,EuBwBF,EvBxBM,EAAE,CAAC,EEwBE,CAAC,AFxBA,CAAC,CAAC,QAAQ,CAAC,GAAG,CEwBC,AFxBA,CEwBC,AFxBD,SEwBU,CAAC,CAAA;APrB7C,AWCA,AMAA,AVqBA,AFxBA,AFwCA,CIhBC,AFxBA,CEwBA,AFxBA,EHGC,AQoBA,IRpBI,C0BqBD,CAAA;A5BrBL,AWCA,AMAA,AVsBA,AFxBA,IHEE,IAAI,A0BsBF,qBAAqB;A5BtBzB,AWCA,AMAA,IfAE,IAAI,A0BsBF,kCAAgB,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,CAAA;A5BtBxC,AWCA,AMAA,IfAE,IAAI,A0BuBF;A5BvBJ,AWCA,AMAA,GZFG,CHED,GQoBG,CRpBC;AFAN,AWCA,AMAA,AZFa,IHEX,AQoBA,IRpBI,AGFO,UAAU,GAAG,UAAS,EKsBrB,CLtB4B,EKsBxC,UAAa,QAAgB;AVpB/B,AWCA,AMAA,GVsBG,CLtBD,AGFA,IHEI,AQoBF,GLtBK,CKsBC,GAAG,ELtBE,CAAC,AKsBA,ILtBI,AKsBA,CLtBC,AKsBA,GLtBG,CAAC,KKsBK,CLtBC,CAAC,AKsBA,CAAA,ELtBG,CAAC,CAAC,OAAO,EAAE,CAAC,CAAA;ALE/C,AWCA,AMAA,AVsBa,AFxBb,CAAC,CAAA,CFuCE,CDrCD,IAAI,AKsBO,AGFT,GkBGG,ElBHc,OHEI,GAAG,AGFJ,EAAH,QHEgB,GGFb,EAAH,CHE8B,EAAE,QAAyB,MGFtD,EAAH,IAAG,EAAE;AVpB1B,AWCA,AMAA,AZDA,AFsCa,IDrCX,AKqBmD,ILrB/C,ACqCO,AyBdT,IlBJK,EkBIC,CAAC,ClBJI,EAAE,OPkBa,GAAG,CIhBoB,AqBE5B,ClBJR,AkBIS,CrBF2B,GqBEvB,EAAE,EzBe9B,IyBfoC,EAAE,GrBFsC,AJiB3D,EACjB,KAAa,EACb,UAAoB;AHxCtB,AWCA,AMAA,IfAE,AKqBA,AJoBA,IDzCI,EKqBE,CJoBC,COtBH,AkBIA,CrBFK,GGFD,CPsBK,COtBH,APsBI,COtBH,GPsBO,AyBlBJ,CzBmBZ,CyBnBc,ClBJC,CAAC,EkBIE,CrBFH,CAAC,CGFK,CPuBZ,CAAC,GIrBY,CAAC,CAAA,CGFM,WPuBF,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,CAC5F,CAAA;AH3CH,AWCA,AMAA,Ad2CA,CAAC,CAAA,CE5CE,CHCD,AKqBA,ILrBI,AKqBA,IqBEA,IrBFQ,AGHqB,IHGjB,GGHwB,CkBKxB,ClBL0B,CHGpB,AGHoB,AkBKxB,CrBFK,GqBED,GrBFO,KAAK,EAAE,EAAE;APrBxC,AWCA,AMAA,AZDa,AF6Cb,ID5CE,IAAI,AKqBF,AFtBS,CKmBR,GkBKC,ErBFI,CqBED,ErBFI,AqBEF,GvBxBc,CuBwBV,CAAC,CvBxBY,GEsBN,CAAC,MFtBc,GAAW,EuBwBhB,CAAC,IrBFM,AqBEF,CrBFG,AqBEF,IAAI,CAAC,CrBFG,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;APrB/D,AWCA,AMAA,IfAE,AGDA,CEsBC,GLrBG,AGDA,AKmBF,CkBKC,CAAC,CAAA,GlBLI,CLnBG,GAAG,AKmBF,KLnBO,AKmBF,CAAC,OLnBS,EAAE,KKmBC,QAAQ,+BAA0B,IAAI,CAAC,SAAS,EAAI,CAAC,CAAA;AVlBrF,AiBCA,IfAE,AKqBA,AGHA,CAAC,GRlBG,AGDF,AuByBA,ErBHI,CAAC,CqBGD,CAAC,EvBzBE,EEsBI,CAAC,AFtBF,CAAA,IuByBK,CrBHG,AqBGF,IAAI,CrBHG,AqBGF,CAAC,CrBHG,AqBGF,CrBHG,AqBGH,CrBHG;APrB9B,AiBCA,IfAE,AKqBA,AGFA,CLpBC,GHCG,A0BwBF,IAAI,CAAC,8BAA8B,EAAE,CrBHG,AqBGH;A5BxBzC,AiBCA,IfAE,AKqBA,AFrBA,AuBwBA,CAAC,G1BxBG,GKqBG,AFrBA,SAAS,CAAC,GEqBJ,CAAC,MAAM,CAAC,CAAC,CFrBQ,CAAC,GEqBJ,AFrBO,CEqBN,AFrBO,CEqBN,AFrBO,CAAC,CEqBN,AFrBO,CEqBN,CAAA,CFrBS,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAA;ALAxD,AiBCA,AVqBA,AFrBA,CEqBC,AFrBA,CEqBA,AFrBA,EHAC,A0ByBA,I1BzBI;AFAN,AiBCA,AVqBa,AFpBb,IHDE,IAAI,AKqBO,eAAe,GAAG,oBAAY,CAAA;APrB3C,AiBCA,AVsBA,GJsBG,CD5CD,GQmBG,AkBMA,C1BzBC;AFAN,AiBCA,Ad4Ca,ID5CX,AQmBA,AkBMA,I1BzBI,AC4CO,iBAAiB,GAAG,UAC/B,GO1BoB,EkBMH,ClBNjB,EkBMA,CzBoBiB,EACjB,KO3BqB,AP2BR,EACb,MO5B4C,IP4BxB;AH/CtB,AiBCA,IfAE,ACgDA,IDhDI,AQmBF,AkBMA,GzBuBK,CO7BD,GkBMG,ClBNC,CAAC,AP6BE,CAAC,CyBvBD,CAAC,EzBuBI,AyBvBF,CzBwBd,AyBxBe,QAAQ,CzBwBd,AyBxBe,CzBwBd,GO9BkB,CAAC,AkBMA,CAAC,KlBNK,AkBMA,EAAE,ClBNC,AkBMD,ClBNE,EAAE,CP8Bd,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,CAC5F,CAAA;AHlDH,AiBCA,AdkDA,CAAC,CAAA,CI5BE,AFrBA,CHDD,A0ByBA,CAAC,G1BzBG,IQmBA,KAA0B,UAAwB,EAAxB,KAAA,IAAI,CAAC,mBAAmB,EAAxB,cAAwB,EAAxB,IAAwB,EAAE;AVnB1D,AiBCA,AVsBa,AFrBA,AFkDb,IDnDE,A0B0BA,I1B1BI,AKsBO,AFrBA,QAAQ,AKiBV,GLjBa,CKiBP,IHIY,GAAG,EFrBC,EAAO,AKiBZ,MHIa,GGJb,OHI+B;APtB3D,AiBCA,IfAE,AKsBA,AFrBA,IHDI,AGCA,GEqBG,GFrBG,CAAC,CKiBL,IAAI,GLjBS,CAAC,EAAE,CAAC,CKiBL,CLjBO,IKiBF,CHID,CAAC,SGJW,cHII,CAAC,UAAU,CAAC,CAAC,CAAA;APtBrD,AiBCA,AVsBA,CAAC,CAAA,ELtBC,IAAI,AGCF,OAAO,KKgB2B,ELhBtB,EAAE,CAAC,EKgB0B,IAAI,CAAA,CLhBtB,CAAC,KAAK,CAAG,CAAA;ALDpC,AiBCA,AVuBA,ILvBE,CGCC,EuByBE,C1B1BC,KQiBC;AVjBP,AiBCA,IfAE,A0B0BA,I1B1BI,CGAG,AKiBJ,ILjBQ,EAAE,YAAY,GuB0BrB,EvB1B0B,CuB0B9B,CvB1BgC,SuB0B3B,gBAAgC;A5B1BvC,AiBCA,IfAE,IAAI,AGAF,AuByBG,IvBzBG,CKgBC,ILhBI,GAAG,EAAE,CAAA,kBuByBb,EAAA,uBAAgC;A5BzBvC,AiBCA,GVuBG,AJ4BA,CDnDD,IAAI,AGAF,AuByBA,IlBTE,AkBSE,CvBzBC,IAAI,AuByBA,CvBzBC,AuByBD,ClBTA,ELhBI,CAAC,CKgBD,CLhBG,AKgBH,CLhBI,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;ALAxC,AiBCA,AVuBa,AJ4BA,IDnDX,IAAI,AKuBO,AJ4BA,AyB1BT,ClBTC,GLhBC,AuByBE,KvBzBG,CAAC,IAAI,CEuBY,AFvBX,CFmDY,EI5BE,CJ4BC,CyB1BR,EAAE,MrBFc,CJ4BC,EEnDhB,CAAC,EAAE,CAAC,CAAC,CAAC,CEuB2B,AFvB1B,CAAC,AFmD4B,CEnD5B,CFmD8B,UAAoB;AHnDnF,AiBCA,IfAE,AKuBA,AJ4BA,IDnDI,AQgBF,APmCI,CEnDH,GFmDO,AyB1BN,ErBFM,CGPD,APmCkB,EI5Bd,AJ4BgB,AyB1BpB,CzB0BoB,EOnCf,AkBSF,ClBTE,GkBSE,CAAC,GAAG,CAAA,IrBFC,CAAC,UAAU,CAAC,CAAA;APvBnC,AiBCA,IfAE,AKuBA,AGPA,APmCA,COnCC,GRhBG,AGAF,CuByBC,KzB0BO,CEnDD,AFmDE,KEnDG,CAAA,CFmDI,CAAC,UAAC,SAAiB,OI5BQ;APvB/C,AiBCA,IfAE,AKuBA,AGNA,CLjBC,GHAG,ACmDF,GI5BK,CJ4BD,CAAC,AyB3BE,IzB2BE,CAAC,EI5BI,CAAC,OJ4BK,CAAC,IAAI,CAAC,EI5BI,CAAC,MJ4BI,CAAC,CAAC,CAAA,CI5BI,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;APvB9D,AiBCA,AVuBA,AFvBA,CEuBC,AFvBA,CEuBA,AFvBA,EHAC,ACmDA,CAAC,CAAC,CAAA,CDnDE,I0BwBA,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;A5BxBpC,AiBCA,AVwBA,ILxBE,ACoDA,IDpDI,GCoDG,KyB5BD,CzB4BO,CAAC,GyB5BH,CzB4BO,CAAC,CyB3BR,IAAI,CAAC,GzB2BY,AyB3BT,CzB2BU,AyB3BT,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KzB2Bc,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAA;AHpDlE,AiBCA,AdoDA,CAAC,CAAA,EDpDC,IAAI,Y0ByBI,0BAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;A5BzBrC,AiBCA,AdqDA,GI7BG,CLxBD,IAAI,Y0ByBI,8EAA8E;A5BzBxF,AiBCA,AVwBa,ILxBX,GQiBG,CRjBC,AKwBO,YAAY,AqBCf,GrBDkB,UAAS,SAAiB,MqBClC,CAAC,0BAAQ,CAAC,CAAC,CAAC,CAAC;A5BzBjC,AiBCA,IfAE,AKwBA,AGPA,IRjBI,KKwBK,GAAG,IqBCJ,MlBRH,GAAL,GHOoB,CAAC,MGPf,GHOwB,CAAC,CAAA,AGPZ,EAAE,EkBQH,CAAC,ClBRc,EAAE,QAAiB,ekBQzB,CAAC,CAAC,CAAC,CAAC;A5BzBjC,AiBCA,IfAE,AKwBA,ILxBI,AKwBA,AGPF,QAAQ,CHOG,CAAC,AqBCP,ClBRM,AkBQN,IlBRU,CHOG,AGPF,KHOO,EAAE,EAAE,MGPI,CAAC,QAAQ,CAAC,CAAA;AVjB7C,AiBCA,IfAE,IAAI,AKwBF,AGNA,IAAI,CkBOD,IrBDM,AGNA,CAAA,EHMG,SAAS,CAAC,gBAAgB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;APxBrE,AiBCA,GdqDG,CDrDD,CKwBC,GLxBG,AQkBF,KAAwB,IkBMf,MlBN8B,EAAf,oBAAA,qBAAe,EAAf,6BAAe,EAAf,IAAe,EAAE;AVlB7C,AiBCA,AdqDa,IDrDX,AKwBA,ILxBI,ACqDO,GI7BJ,CGPA,IAAM,AkBOP,IrBAU,CAAA,AqBAL,GAAG,ClBPQ,CPoCO,EyB7BX,CzB6Bc,AyB7Bb,GAAG,CAAC,KAAK,CzB6Ba,AyB7BZ,CAAC,EAAE,CAAC,CAAC,CAAA,GzB6BwB,COpCpC;AVjBxB,AiBCA,AVwBA,CAAC,CAAA,ELxBC,ACqDA,IDrDI,GCqDG,COpCH,CkBOC,GlBPG,CAAC,APoCI,CAAC,IAAI,CAAC,GOpCD,CAAC,CAAC,CAAC,CAAC,EPoCM,CAAC,EOpCF,CAAC,EAAE,aPoCiB,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;AHrD9E,AiBCA,AdqDA,CAAC,CAAA,EDrDC,IAAI,C0BwBD,OlBPG,MAAM,IAAI,KAAK,CAAC,WAAS,KAAK,iBAAc,CAAC,CAAA;AVjBrD,AiBCA,AdsDA,IDtDE,IAAI,A0ByBF,KlBRG,SkBQW;A5BzBlB,AiBCA,IfAE,IAAI,A0ByBF,IlBRE,GkBQK,ClBRD,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,AkBQhB,ClBRiB,AkBQhB,KlBRqB,AkBQhB,CAAC,CAAA,OlBRwB,EAAE;AVjBnD,AiBCA,IfAE,A0ByBA,CAAC,G1BzBG,QQiBE,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AVjB3C,AiBCA,IfAE,A0B0BA,I1B1BI,KQiBC;AVjBP,AiBCA,IfAE,IAAI,IQiBA,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,QAAQ;AVjBnC,AiBCA,GdsDG,CDtDD,G0B0BG,C1B1BC,QQgB+B,MAAK;AVhB1C,AiBCA,AdsDa,IDtDX,A0B0BA,I1B1BI,ACsDO,COtCR,cPsCuB,GAAG,UAAS,AyB5B5B,GAAV,MzB4BuD;AHtDzD,AiBCA,IfAE,ACsDA,IDtDI,AQgBF,AkBUA,GzB4BK,COtCD,GkBUG,ElBVE,APsCE,CAAC,CyB5BD,CAAC,ElBVE,APsCE,CAAC,IyB5BE,CAAC,GlBVG,CPsCG,COtCD,APsCE,EyB5BA,EAAE,CAAA,UzB4Ba,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;AHtD3E,AiBCA,AdsDA,CAAC,CAAA,EDtDC,A0B0BA,CAAC,G1B1BG,IQgBA,MAAM,IAAI,KAAK,CAAI,KAAK,mBAAc,IAAI,eAAY,CAAC,CAAA;AVhB7D,AiBCA,AduDA,IDvDE,A0B2BA,I1B3BI,CQgBD;AVhBL,AiBCA,IfAE,IAAI,AQgBF,OAAO,KAAK,CAAA;AVhBhB,AiBCA,IfAE,AQgBA,CAAC,EkBWE,C1B3BC;AFAN,AiBCA,IfAE,AQiBA,AkBUA,I1B3BI,kC0B2BY,GAAhB;A5B3BF,AiBCA,IfAE,IAAI,A0B2BF,IAAI,IAAI,CAAC,KAAK,EAAE;A5B3BpB,AiBCA,GduDG,CDvDD,IAAI,I0B2BA,OAAO,IAAI,CAAC,KAAK,CAAA;A5B3BvB,AiBCA,AduDa,IDvDX,IAAI,ACuDO,CyB5BR,czB4BuB,GAAG,UAAS,SAAiB;AHvDzD,AiBCA,IfAE,ACuDA,IDvDI,A0B2BF,GzB4BK,CyB5BC,KzB4BK,CAAC,AyB5BA,GAAG,CzB4BC,CAAC,EyB5BE,CAAC,MzB4BM,CAAC,WyB5BW,EAAE,CAAA,CzB4BE,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;AHvD3E,AiBCA,AduDA,CAAC,CAAA,EDvDC,GQiBG,CRjBC,A0B2BF,IAAI,CAAC,KAAK,GAAG,iCAAe,CAAC,MAAM,CAAC,CAAA;A5B3BxC,AiBCA,AdwDA,IDxDE,AQiBA,IRjBI,A0B2BF,OAAO,IAAI,CAAC,KAAK,CAAA,OlBVP,GAAZ,UAAa,KAAa,EAAE,IAAY,EAAE,WAAmB;AVjB/D,AiBCA,IfAE,A0B2BA,CAAC,G1B3BG,AQiBF,IAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAA;AVjBvD,AiBCA,IfAE,A0B4BA,I1B5BI,AQiBF,IAAM,QAAQ,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;AVjB5D,AiBCA,IfAE,IQiBE,OAAO,ERjBI,EQiBA,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAA;AVjB5C,AiBCA,IfAE,AQiBA,CAAC,EkBWE,C1B5BC;AFAN,AiBCA,GdwDG,CDxDD,AQkBA,AkBUA,I1B5BI,oC0B4Bc,GAAlB;A5B5BF,AiBCA,AdwDa,IDxDX,IAAI,ACwDO,AyB5BT,IAAI,CAAC,IAAI,CAAC,QzB4BiB,GAAG,IyB5BL,EAAE,EAAE,EzB4BU,SAAiB;AHxD5D,AiBCA,IfAE,ACwDA,IDxDI,I0B4BA,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAA,mBzB4BwB;AHxDlE,AiBCA,IfAE,ACwDA,IDxDI,C0B4BD,gCzB4BkC;AHxDvC,AiBCA,IfAE,ACwDA,IDxDI,A0B6BF,sCzB2BwC,0CyB3BwC;A5B7BpF,AiBCA,IfAE,ACwDA,IDxDI,ACwDA,AyB3BF,OAAO,EzB2BI,CAAC,CyB3BD,CAAC,IzB2BM,KAAK,CAAC,EAAE,CyB3BA,CAAA;A5B7B9B,AiBCA,IfAE,A0B6BA,CAAC,ElBXE,CRlBC,ACwDF,MAAM,IAAI,UAAU,CAAC,6BAA6B,CAAC,CAAA;AHxDvD,AiBCA,IfAE,AQkBA,AkBYA,CzB0BC,GDxDG,oCQkBmB,GAAvB,UACE,QAAuB,EACvB,WAAmB,EACnB,IAAsB;AVrB1B,AiBCA,IfAE,ACyDA,IDzDI,AQsBF,APmCI,IOnCA,EPmCM,COnCH,EPmCM,EOnCF,CPmCK,CAAC,GOnCD,SAAS,CAAC,CAAC,CAAC,GPmCO,COnCH,APmCI,COnCH,CAAC,CAAC,EAAE,CAAA,GPmCQ,CAAC,CAAA;AHzDlD,AiBCA,IfAE,ACyDA,GyB3BG,C1B9BC,AQsBF,APmCE,IOnCI,EPmCE,KAAK,IAAI,EOnCE,APmCA,GOnCG,IAAI,CAAC,aAAa,KAAK,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAA;AVtBvF,AiBCA,IfAE,A0B8BA,I1B9BI,AQsBF,APmCA,MAAM,EOnCE,EPmCE,COnCC,IAAI,APmCA,COnCC,APmCA,eOnCe,CAAC,CkBQnB,GAAf,IlBR0C,EAAE,IPmCI,CAAC,CAAA,OOnCQ,CAAC,CAAA;AVtB5D,AiBCA,IfAE,CCyDC,GDzDG,AQsBF,AkBQA,IlBRM,AkBQA,OlBRO,AkBQA,GlBRG,AkBQA,IlBRI,AkBQA,ClBRC,AkBQA,IAAI,CAAC,KAAK,CAAC,CAAA,ClBRE,CAAC,QAAQ,CAAC,CAAA;AVtBhD,IECE,AC0DA,ID1DI,AQsBF,AkBQA,GzB4BK,COpCD,OAAO,GPoCK,CAAC,COpCD,IAAI,IAAI,MPoCQ,CAAC,IOpCE,EPoCI,CAAC,COpCD,APoCC,OOpCM,kDkBQkD;A5B9BpG,AG2DA,CAAC,CAAA,ED1DC,IAAI,A0B8BF,IlBTgD,AkBS5C,IAAI,CAAC,ElBT8C,IAAI,CAAA,AkBS3C,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,IAAI,oBAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;A5B9BpF,AG4DA,ID3DE,IAAI,AQqBF,IkBSE,GlBTK,IkBSE,ClBTG,CAAA,GkBSE,CAAA;A5B9BlB,IECE,AQqBA,CAAC,GRrBG,C0B8BD;A5B9BL,IECE,AQsBA,IRtBI,A0B+BF,IAAI;A5B/BR,IECE,IAAI,I0B+BA,IAAM,CAAC,GAAG,6BAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;A5B/BnC,IECE,IAAI,I0B+BA,IAAM,+BAA+B,GACnC,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAA;A5BhCrF,IECE,IAAI,I0BgCA,IAAI,CAAC,aAAa,GAAG,2BAAS,CAC5B,OAAO,EACP,CAAC,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,+BAA+B,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,SAAS,CAChE,CAAA;A5BtCP,IECE,IAAI,C0BsCD;A5BtCL,GG4DG,CD3DD,GQsBG,CRtBC,A0BqCA,OAAO,CAAC,EAAE;A5BrChB,AG4Da,ID3DX,AQsBA,IRtBI,AC2DO,IAAI,AyBtBX,GzBsBc,IyBtBP,KAAK,CzBuBhB,AyBvBgB,OzBuBD,EOtCF,APuCb,GOvCA,OPuCkB,EAClB,COxCc,MPwCO,KOxCY,EAAE,IAAsB;AVtB3D,IECE,AC+DA,ID/DI,AQsBF,APyCE,CyB1BD,MlBfM,APyCE,IOzCE,CAAC,APyCE,IAAI,EAAE,iBOzCe,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAA;AVtBhE,IECE,AQsBA,CAAC,GRtBG,AC+DF,AyBzBA,MzByBM,CyBzBC,CAAC,CAAC,CzByBC,GyBzBG,CAAC,KzByBK,CAAC,OyBzBO,CAAA,qBzByBsB,CAAC,CAAA;AH/DtD,IECE,AQuBA,AkBeA,CzByBC,AyBzBA,G1BtCG;AFAN,IECE,ACgEA,AyBzBA,I1BvCI,ACgEA,WAAW,GAA8B,SAAS,CAAA;AHhExD,IECE,ACiEA,IDjEI,ACiEA,OAAO,EAAE;AHjEf,IECE,IAAI,ACiEF,WAAW,GAAG,EAAE,CAAA;AHjEpB,IECE,G0BuCG,C1BvCC,ACkEF,IAAI,OAAO,CAAC,IAAI,KAAK,IAAI,EAAE;AHlE/B,IECE,A0BuCA,I1BvCI,ICkEA,kByB3BA,GAAJ,SzB2BkC,CyB3B7B,UAAkB;A5BvCzB,IECE,GQuBG,CRvBC,A0BuCF,IzB2BE,MAAM,IAAI,SAAS,CAAC,iCAAiC,CAAC,CAAA,kCyB3BqC;A5BvCjG,CECC,CAAC,CAAA,CQuBA,IkBgBE,CzB2BC,+BO3CgB,GAAnB,UACE,MkBemD,GlBf3B,EACxB,SAAiB,EACjB,IAAsB;ARxB1B,AFFA,IEEM,IQ0BF,APwCA,AyB5BA,IlBZI,APwCA,AyB5BA,CAAC,CAAC,ClBZC,EkBYE,ElBZE,APwCA,CAAC,CyB5BC,GlBZG,APwCA,EAAE,OOxCO,CAAC,CAAC,CAAC,AkBYT,CAAC,C1BtCgB,C0BsCd,ClBZU,AkBYT,C1BtCgB,AQ0BN,AkBYV,ClBZW,CAAC,EAAE,CAAA,CR1BQ,CAAC,IAAI,CAAC;AFDvD,IEEE,IQ0BE,AkBYA,I1BtCM,AQ0BA,APwCJ,AyB5BE,CAAC,CAAC,EzB4BA,CyB5BG,IAAI,ClBZG,CPwCH,CAAC,COxCK,GPwCD,COxCK,APwCJ,COxCK,KPwCC,CyB5BN,CAAC,EzB4BS,AyB5BP,ClBZY,AkBYX,CzB4BQ,AyB5BR,EzB4BU,EOxCM,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAA;AV3B9E,IEEE,IAAI,AQ0BF,AkBYA,IAAI,CAAC,CAAC,EzB4BF,COxCK,AkBYA,GlBZG,CkBYC,CzB4BH,EOxCM,CAAC,CPwCH,UAAU,AyB5BL,CzB4BM,AyB5BL,EAAE,ClBZU,AkBYT,ClBZU,AkBYV,SlBZmB,EAAE,IAAI,CAAC,YPwCQ,COxCK,APwCJ,COxCK,APwCL,COxCK;AV3BnE,IEEE,IAAI,AQ2BF,AkBYA,IlBZI,AkBYE,CzB2BH,MyB3BU,ElBZA,CAAA,AkBYG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;A5BxCpC,IEEE,IAAI,AQ2BF,AkBYA,IlBZI,APwCF,AyB5BI,GAAG,GAAG,IlBZE,CPwCD,COxCG,APwCF,IAAI,GAAG,IAAI,OyB5BP,CAAC,EzB4BgB,CAAC,IyB5BV,EAAE,CzB4Be,CAAC,IAAI,CAAC,CAAA,EyB5BX,CAAC,CAAA;A5BxC3C,IEEE,IAAI,A0BwCF,CzB2BC,GOxCC,AkBaE,IAAI,CAAC,IlBbE,GAAG,IAAI,CAAC,KkBaO,EAAE,EAAE,MlBbI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;AV5BlD,IEEE,IAAI,ACoEF,COzCC,GPyCG,AyB5BF,GAAG,CAAC,CAAC,EzB4BI,CAAC,CyB5BD,IAAI,CAAC,CzB4BG,KAAK,IAAI,AyB5BF,EzB4BI,AyB5BF,GAAG,CAAC,GAAG,CAAC,CAAA;A5BzCxC,IEEE,IAAI,C0BwCD,GzB4BC,CO1CK,KP0CC,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAA;AHrEjE,IEEE,IAAI,A0ByCF,CzB2BC,GO1CC,EkBeI,CAAC,MlBfI,AkBeE,CAAC,ElBfA,EkBeI,ElBfA,AkBeE,ClBfD,EkBeI,CAAC,CAAA,KlBfI,EAAE,CAAA;AV3BlC,IEEE,A0ByCA,CAAC,G1BzCG,ACqEF,CO3CC,GP2CG,OAAO,CAAC,OAAO,EAAE;AHtEzB,IEEE,A0B0CA,I1B1CI,AQ2BF,IAAI,AP0CF,MO1CQ,GAAG,CAAC,CAAC,EACb,MAAM,GAAG,CAAC,CAAC,CAAA,mBPyCiC;AHtElD,IEEE,IQ4BE,IAAI,APyCF,KOzCO,CR5BG,EQ4BA,CAAC,CAAA,CPyCA,CAAC,OAAO,GAAG,UACpB,OAAmB,EACnB,UAAsB,EACtB,IAAuB,EACvB,IAAuB,EACvB,OAAe;AH3EvB,IEEE,G0B0CG,C1B1CC,AQ4BF,KAAiB,GP+Cb,IAAM,GO/CgB,EAAT,KP+CG,GAAkB,IAAI,IAAI,IAAI,CAAC,CAAC,CO/C1B,AP+C2B,EO/CpC,IP+C0C,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CO/CnD,AP+CmD,EO/C5D,IAAS,EAAE;AV7BhC,IEEE,A0B0CA,I1B1CI,IQ2BG,IAAM,APgDP,EOhDS,EPgDH,UAAU,GAAkB,GOhDzB,AkBeL,CzBiCkC,EyBjC5C,EzBiCgD,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAA;AH5EjF,IEEE,IAAI,A0B0CF,IlBfE,AkBeI,IlBfA,APiDF,AyBlCM,ElBfF,CAAC,AkBeI,CzBkCL,GyBlCS,CAAC,ClBfH,CAAC,APiDF,CyBlCO,CAAC,CzBkCG,AyBlCF,CAAC,ClBfH,AkBeG,IzBkCO,CAAC,IOjDF,APiDM,CAAC,EAAE,CAAC,CAAA;AH7E5C,IEEE,IAAI,A0B0CF,IAAM,IlBhB0B,APmD5B,AyBnCM,GAAG,CzBmCL,EOnD8B,CkBgBrB,ElBhBwB,EPmD1B,CAAC,EOnD8B,CAAA,IPmDvB,EAAE,MyBnCN,CAAC,CAAC,CAAC,CAAA;A5B3C1B,IEEE,IAAI,A0B0CF,IlBhBE,CkBgBG,GlBhBC,CkBgBG,ClBhBD,AkBgBE,ClBhBD,CPmDH,CyBnCO,CAAC,EAAE,ClBhBD,AkBgBE,ClBhBD,APmDJ,EyBnCQ,CzBmCL,EOnDM,CkBgBG,CAAC,GzBmCH,CAAC,EyBnCQ,ClBhBD,CkBgBG,CAAC,EzBmCJ,AyBnCM,CzBoC5B,CyBpC8B,KzBoCxB,CAAC,IAAI,CAAC,OAAO,CAAC,EACpB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EACvB,UAAU,EACV,UAAU,EACV,OAAO,CACR,CAAA;AHpFX,IEEE,IAAI,I0B0CA,IlBjB8B,AkBiB1B,CzByCD,AyBzCE,CAAC,CAAC,GlBjB6B,EkBiBxB,ClBjB2B,AkBiB1B,KlBjB+B,CAAA;AV1BlD,IEEE,IAAI,IQyBA,IP2DE,AyB1CA,ClBjBG,AkBiBF,CAAC,GlBjBK,CAAC,AkBiBF,ClBjBE,AP2DD,AyB1CA,IzB0CI,CyB1CC,CAAC,IAAI,CAAC,GzB0CG,CAAC,GyB1CG,CAAC,EzB0CE,CAAC,CAAA,CyB1CE,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;A5B3CnE,IEEE,IAAI,CQyBD,GP2DC,CAAC,CAAA,EyB1CC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,eAAe,CAAC,CAAC,CAAA;A5B3CtE,IEEE,IAAI,AQyBF,CP2DC,AyB1CA,MlBjBM,MAAM,IAAI,MAAM,CAAA;AV1B3B,IEEE,AQyBA,CAAC,AP2DA,GDpFG,A0B0CF,OAAO,IAAI,CAAA;A5B3Cf,IEEE,AQ0BA,AP2DA,AyB3CA,CAAC,G1B1CG,ACqFE,GAAG,GAAG,SAAS,CAAC,SAAS,CAC7B,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,EACxB,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,EAC3B,WAAW,CACZ,CAAA;AH1FH,IEEE,AC0FA,AyB/CA,I1B3CI,GC0FG;AH3FT,IEEE,IAAI,AC0FF,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC;AH3FzC,IEEE,G0B2CG,C1B3CC,AC0FF,QAAQ,EAAE,GAAG,CAAC,KAAK;AH3FvB,IEEE,A0B2CA,CzB+CC,CAAA,ED1FG,4B0B2CM,GAAV;A5B5CF,AG4FA,CAAC,CAAA,ED1FC,GQ0BG,CR1BC,A0B2CF,IAAM,GAAG,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAA;A5B5C9E,AG6FA,ID3FE,AQ0BA,IR1BI,A0B2CF,IAAI,IAAI,CAAC,OAAO,CAAC,OlBjBR,GAAX,CkBiB8B,CAAC,QlBjBnB,GkBiB8B,CAAC,IlBjBf,AkBiBmB,ElBjBjB,EkBiBqB,CAAC,ClBjBA,gBkBiBiB,EAAE,EAAE;A5B5C3E,IEEE,IAAI,AQ0BF,IkBiBE,GlBjBK,AkBiBF,CAAC,GlBjBK,CAAC,CkBiBD,CAAC,IAAI,CAAC,OAAO,CAAC,IlBjBM,CAAC,AkBiBF,CAAC,GlBjBK,EAAE,MkBiBI,ElBjBI,AkBiBF,ElBjBI,IAAI,CAAC,CAAA,IkBiBG,CAAC,CAAC,CAAA;A5B5C9D,IEEE,AQ0BA,CAAC,GR1BG,C0B2CD;A5B5CL,IEEE,AQ2BA,IR3BI,A0B2CF,OAAO,GAAG,CAAA;A5B5Cd,IEEE,A0B2CA,CAAC,G1B3CG;AFDN,IEEE,A0B4CA,I1B5CI;AFDN,IEEE,IAAI;AFDN,GG6FG,CD3FD,G0B4CG,C1B5CC;AFDN,AG6Fa,ID3FX,A0B4CA,GlBjBG,CR3BC,AC2FO,MAAM,GAAG,UAAS,OAAe,EAAE,IyB/ChC,GAAd,EzB+C+D,EAAE,SAAiB;AH5FpF,IEEE,AQ2BA,APgEA,ID3FI,A0B4CF,GzB+CK,IyB/CE,IAAI,CzB+CG,CAAC,WAAW,CAAC,MyB/Cd,CAAC,GzB+CuB,COhEhB,APgEiB,AyB/CpB,CAAC,ElBjBrB,CPg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ACoGA,IDpGI,A0BoDF,IlB3BK,IAAM,EAAE,YAAA,4BP2EuC,gByBhDc;A5BrDtE,IEEE,ACoGA,IDpGI,A0BoDF,GzBgDK,CO3EH,GkB2BK,ClB3BD,CP2EK,CO3EH,AP2EI,CO3EH,GP2EO,CAAC,GO3ED,CAAC,KAAK,AP2EI,CAAC,GO3ED,AkB2BhB,CzBgDqB,AyBhDpB,CzBgDqB,KyBhDf,CAAC,IzBgDwB,AyBhDpB,CzBgDqB,AyBhDpB,GAAG,CzBgDqB,AyBhDpB,CzBgDqB,AyBhDrB,SzBgD8B,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;AHrGjG,AGsGA,CAAC,CAAA,EDpGC,A0BoDA,CAAC,G1BpDG,QQwB0B,SAAQ;AVzBxC,AGuGa,IDrGX,A0BqDA,I1BrDI,ACqGO,IO7EP,IAAI,EP6Ea,GAAG,MO7EL,IP8EnB,CO9EwB,QP8EP,CO9EgB,CP+EjC,GO/EqC,OP+EnB,EAClB,EOhFgD,KAAK,GPgFjC,COhFqC,IAAI,WAAW,GAAG,EAAE,CAAC,OAAO,CAAC;AVzBxF,IEEE,ACyGA,IDzGI,QQuBoF,MAAK,sCPkFrC;AH1G1D,IEEE,ACyGA,IDzGI,IQuBA,IAAI,IAAI,CAAC,aAAa,IAAI,CAAC,EPkFM,EOlFF,CAAC,oBAAoB,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AVxBtE,IEEE,ACyGA,GyBpDG,C1BrDC,QQsBkE,SAAQ,WPmF9C;AH1GlC,IEEE,ACyGA,AyBpDA,I1BrDI,ACyGA,IOlFA,KPkFS,CAAC,MAAM,GOlFD,CAAC,CPkFK,EAAE,COlFH,AkB8BlB,ClB9BmB,EAAE,APkFI,AyBpD/B,ClB9B4B,CAAA,OPkFY,CAAC,AyBpDlC,MzBoDwC,AyBpDjB,KzBoDsB,EAAE,EAAE;AH1G1D,IEEE,IAAI,ACyGF,AyBrDK,ClB7BJ,KPkFK,IAAI,UAAU,CAAC,EyBrDhB,EAAA,cAAuB,YzBqDuB,CAAC,CAAA;AH1GxD,IEEE,CCyGC,GDzGG,AQuBF,AkB6BA,OlB7BO,eAAe,CAAA,2CkB6B4C;A5BrDtE,IEEE,AQuBA,APmFA,COnFC,G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,oBAAoB,CAAA;A5BzElE,IEEE,A0BwEA,CAAC,ElB/CE,CRzBC;AFDN,IEEE,AQyBA,AkB+CF,I1BxEM,c0BwEL,QlB/CU,GAAT,UAAU,QAAiB;AV1B7B,A4ByEA,CAvYA,AAuYC,G1BvEC,C0BuED,G1BvEK,AQyBF,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAA;AV1B7C,IEEE,IAAI,AQyBF,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAA;AV1BnD,IEEE,AQyBA,CAAC,GRzBG;AFDN,IEEE,AQ0BA,IR1BI;AFDN,IEEE,IAAI;AFDN,IEEE,IAAI;AFDN,IEEE,IAAI;AFDN,IEEE,GQ0BG,CR1BC;AFDN,IEEE,AQ0BA,IR1BI,qBQ0BI,GAAR,UAAS,QAAiB;AV3B5B,IEEE,IAAI,AQ0BF,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAA;AV3B7C,IEEE,IAAI,AQ0BF,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAA;AV3BlD,IEEE,AQ0BA,CAAC,GR1BG;AFDN,IEEE,AQ2BA,IR3BI;AFDN,IEEE,IAAI;AFDN,IEEE,IAAI;AFDN,IEEE,GQ2BG,CR3BC;AFDN,IEEE,AQ2BA,IR3BI,oBQ2BG,GAAP;AV5BF,IEEE,IAAI,AQ2BF,OAAa,IAAI,CAAC,YAAa,CAAC,SAAS,CAAC,CAAA;AV5B9C,IEEE,AQ2BA,CAAC,GR3BG;AFDN,IEEE,AQ4BA,IR5BI;AFDN,IEEE,IAAI;AFDN,IEEE,IAAI;AFDN,IEEE,GQ4BG,CR5BC;AFDN,IEEE,AQ4BA,IR5BI,sBQ4BK,GAAT;AV7BF,IEEE,IAAI,AQ4BF,OAAa,IAAI,CAAC,YAAa,CAAC,WAAW,CAAC,CAAA;AV7BhD,IEEE,AQ4BA,CAAC,GR5BG;AFDN,IEEE,AQ6BA,IR7BI;AFDN,IEEE,IAAI;AFDN,IEEE,IAAI;AFDN,IEEE,GQ6BG,CR7BC;AFDN,IEEE,AQ6BA,IR7BI,2BQ6BU,GAAd;AV9BF,IEEE,IAAI,AQ6BF,OAAa,IAAI,CAAC,YAAa,CAAC,gBAAgB,CAAC,CAAA;AV9BrD,IEEE,AQ6BA,CAAC,GR7BG;AFDN,IEEE,AQ8BA,IR9BI;AFDN,IEEE,IAAI;AFDN,IEEE,IAAI;AFDN,IEEE,GQ8BG,CR9BC;AFDN,IEEE,AQ8BA,IR9BI,qBQ8BI,GAAR;AV/BF,IEEE,IAAI,AQ8BF,OAAO,IAAI,CAAC,SAAS,CAAA;AV/BzB,IEEE,AQ8BA,CAAC,GR9BG;AFDN,IEEE,AQ+BA,IR/BI;AFDN,IEEE,IAAI;AFDN,IEEE,IAAI;AFDN,IEEE,GQ+BG,CR/BC;AFDN,IEEE,AQ+BA,IR/BI,oBQ+BG,GAAP;AVhCF,IEEE,IAAI,AQ+BF,OAAqB,IAAI,CAAC,YAAa,CAAC,SAAS,CAAC,CAAA;AVhCtD,IEEE,AQ+BA,CAAC,GR/BG;AFDN,IEEE,AQgCA,IRhCI;AFDN,IEEE,IAAI;AFDN,IEEE,IAAI;AFDN,IEEE,GQgCG,CRhCC;AFDN,IEEE,AQgCA,IRhCI,sBQgCK,GAAT;AVjCF,IEEE,IAAI,AQgCF,OAAO,eAAW,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,IAAU,IAAI,CAAC,YAAa,CAAC,MAAM,CAAC,CAAA;AVjCnF,IEEE,AQgCA,CAAC,GRhCG;AFDN,IEEE,AQiCA,IRjCI;AFDN,IEEE,IAAI;AFDN,IEEE,IAAI;AFDN,IEEE,GQiCG,CRjCC;AFDN,IEEE,AQiCA,IRjCI,sBQiCK,GAAT;AVlCF,IEEE,IAAI,AQiCF,OAAa,IAAI,CAAC,YAAa,CAAC,WAAW,CAAC,CAAA;AVlChD,IEEE,AQiCA,CAAC,GRjCG;AFDN,IEEE,AQiCF,IRjCM,SQiCL;AVlCD,AUkCA,CAtaA,AAsaC,GRhCC,CQgCD,GRhaAAa;AFDfgBAAgB,GAAG,UACzB,UAAkB,EAClB,SAAiB,EACjB,UAA0B;AFL5B,IEKE,2BAAA,EAAA,iBAA0B;AFJ5B,IEME,IAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CACxB,UAAU,CAAC,CAAC,CAAC,gCAAgC,CAAC,CAAC,CAAC,kCAAkC,CACnF,CAAA;AFPH,IEQE,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC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":"dist.256f8f1f.js","sourceRoot":"..\\src","sourcesContent":["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n",null,null,null,null,null,null,null,null,null,null,"module.exports = {\n    \"name\": \"mainnet\",\n    \"chainId\": 1,\n    \"networkId\": 1,\n    \"comment\": \"The Ethereum main chain\",\n    \"url\": \"https://ethstats.net/\",\n    \"genesis\": {\n        \"hash\": \"0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3\",\n        \"timestamp\": null,\n        \"gasLimit\": 5000,\n        \"difficulty\": 17179869184,\n        \"nonce\": \"0x0000000000000042\",\n        \"extraData\": \"0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa\",\n        \"stateRoot\": \"0xd7f8974fb5ac78d9ac099b9ad5018bedc2ce0a72dad1827a1709da30580f0544\"\n    },\n    \"hardforks\": [\n        {\n            \"name\": \"chainstart\",\n            \"block\": 0,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"homestead\",\n            \"block\": 1150000,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"dao\",\n            \"block\": 1920000,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"tangerineWhistle\",\n            \"block\": 2463000,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"spuriousDragon\",\n            \"block\": 2675000,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"byzantium\",\n            \"block\": 4370000,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"constantinople\",\n            \"block\": 7280000,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"petersburg\",\n            \"block\": 7280000,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"istanbul\",\n            \"block\": 9069000,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"muirGlacier\",\n            \"block\": 9200000,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        }\n    ],\n    \"bootstrapNodes\": [\n        {\n            \"ip\": \"18.138.108.67\",\n            \"port\": 30303,\n            \"id\": \"d860a01f9722d78051619d1e2351aba3f43f943f6f00718d1b9baa4101932a1f5011f16bb2b1bb35db20d6fe28fa0bf09636d26a87d31de9ec6203eeedb1f666\",\n            \"location\": \"ap-southeast-1-001\",\n            \"comment\": \"bootnode-aws-ap-southeast-1-001\"\n        },\n        {\n            \"ip\": \"3.209.45.79\",\n            \"port\": 30303,\n            \"id\": \"22a8232c3abc76a16ae9d6c3b164f98775fe226f0917b0ca871128a74a8e9630b458460865bab457221f1d448dd9791d24c4e5d88786180ac185df813a68d4de\",\n            \"location\": \"us-east-1-001\",\n            \"comment\": \"bootnode-aws-us-east-1-001\"\n        },\n        {\n            \"ip\": \"34.255.23.113\",\n            \"port\": 30303,\n            \"id\": \"ca6de62fce278f96aea6ec5a2daadb877e51651247cb96ee310a318def462913b653963c155a0ef6c7d50048bba6e6cea881130857413d9f50a621546b590758\",\n            \"location\": \"eu-west-1-001\",\n            \"comment\": \"bootnode-aws-eu-west-1-001\"\n        },\n        {\n            \"ip\": \"35.158.244.151\",\n            \"port\": 30303,\n            \"id\": \"279944d8dcd428dffaa7436f25ca0ca43ae19e7bcf94a8fb7d1641651f92d121e972ac2e8f381414b80cc8e5555811c2ec6e1a99bb009b3f53c4c69923e11bd8\",\n            \"location\": \"eu-central-1-001\",\n            \"comment\": \"bootnode-aws-eu-central-1-001\"\n        },\n        {\n            \"ip\": \"52.187.207.27\",\n            \"port\": 30303,\n            \"id\": \"8499da03c47d637b20eee24eec3c356c9a2e6148d6fe25ca195c7949ab8ec2c03e3556126b0d7ed644675e78c4318b08691b7b57de10e5f0d40d05b09238fa0a\",\n            \"location\": \"australiaeast-001\",\n            \"comment\": \"bootnode-azure-australiaeast-001\"\n        },\n        {\n            \"ip\": \"191.234.162.198\",\n            \"port\": 30303,\n            \"id\": \"103858bdb88756c71f15e9b5e09b56dc1be52f0a5021d46301dbbfb7e130029cc9d0d6f73f693bc29b665770fff7da4d34f3c6379fe12721b5d7a0bcb5ca1fc1\",\n            \"location\": \"brazilsouth-001\",\n            \"comment\": \"bootnode-azure-brazilsouth-001\"\n        },\n        {\n            \"ip\": \"52.231.165.108\",\n            \"port\": 30303,\n            \"id\": \"715171f50508aba88aecd1250af392a45a330af91d7b90701c436b618c86aaa1589c9184561907bebbb56439b8f8787bc01f49a7c77276c58c1b09822d75e8e8\",\n            \"location\": \"koreasouth-001\",\n            \"comment\": \"bootnode-azure-koreasouth-001\"\n        },\n        {\n            \"ip\": \"104.42.217.25\",\n            \"port\": 30303,\n            \"id\": \"5d6d7cd20d6da4bb83a1d28cadb5d409b64edf314c0335df658c1a54e32c7c4a7ab7823d57c39b6a757556e68ff1df17c748b698544a55cb488b52479a92b60f\",\n            \"location\": \"westus-001\",\n            \"comment\": \"bootnode-azure-westus-001\"\n        }\n    ]\n}\n;","module.exports = {\n    \"name\": \"ropsten\",\n    \"chainId\": 3,\n    \"networkId\": 3,\n    \"comment\": \"PoW test network\",\n    \"url\": \"https://github.com/ethereum/ropsten\",\n    \"genesis\": {\n        \"hash\": \"0x41941023680923e0fe4d74a34bdac8141f2540e3ae90623718e47d66d1ca4a2d\",\n        \"timestamp\": null,\n        \"gasLimit\": 16777216,\n        \"difficulty\": 1048576,\n        \"nonce\": \"0x0000000000000042\",\n        \"extraData\": \"0x3535353535353535353535353535353535353535353535353535353535353535\",\n        \"stateRoot\": \"0x217b0bbcfb72e2d57e28f33cb361b9983513177755dc3f33ce3e7022ed62b77b\"\n    },\n    \"hardforks\": [\n        {\n            \"name\": \"chainstart\",\n            \"block\": 0,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"homestead\",\n            \"block\": 0,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"dao\",\n            \"block\": null,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"tangerineWhistle\",\n            \"block\": 0,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"spuriousDragon\",\n            \"block\": 10,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"byzantium\",\n            \"block\": 1700000,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"constantinople\",\n            \"block\": 4230000,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"petersburg\",\n            \"block\": 4939394,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"istanbul\",\n            \"block\": 6485846,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"muirGlacier\",\n            \"block\": 7117117,\n            \"consensus\": \"pow\",\n            \"finality\": null\n        }\n    ],\n    \"bootstrapNodes\": [\n        {\n            \"ip\": \"52.176.7.10\",\n            \"port\": 30303,\n            \"id\": \"30b7ab30a01c124a6cceca36863ece12c4f5fa68e3ba9b0b51407ccc002eeed3b3102d20a88f1c1d3c3154e2449317b8ef95090e77b312d5cc39354f86d5d606\",\n            \"location\": \"\",\n            \"comment\": \"US-Azure geth\"\n        },\n        {\n            \"ip\": \"52.176.100.77\",\n            \"port\": 30303,\n            \"id\": \"865a63255b3bb68023b6bffd5095118fcc13e79dcf014fe4e47e065c350c7cc72af2e53eff895f11ba1bbb6a2b33271c1116ee870f266618eadfc2e78aa7349c\",\n            \"location\": \"\",\n            \"comment\": \"US-Azure parity\"\n        },\n        {\n            \"ip\": \"52.232.243.152\",\n            \"port\": 30303,\n            \"id\": \"6332792c4a00e3e4ee0926ed89e0d27ef985424d97b6a45bf0f23e51f0dcb5e66b875777506458aea7af6f9e4ffb69f43f3778ee73c81ed9d34c51c4b16b0b0f\",\n            \"location\": \"\",\n            \"comment\": \"Parity\"\n        },\n        {\n            \"ip\": \"192.81.208.223\",\n            \"port\": 30303,\n            \"id\": \"94c15d1b9e2fe7ce56e458b9a3b672ef11894ddedd0c6f247e0f1d3487f52b66208fb4aeb8179fce6e3a749ea93ed147c37976d67af557508d199d9594c35f09\",\n            \"location\": \"\",\n            \"comment\": \"@gpip\"\n        }\n    ]\n}\n;","module.exports = {\n    \"name\": \"rinkeby\",\n    \"chainId\": 4,\n    \"networkId\": 4,\n    \"comment\": \"PoA test network\",\n    \"url\": \"https://www.rinkeby.io\",\n    \"genesis\": {\n        \"hash\": \"0x6341fd3daf94b748c72ced5a5b26028f2474f5f00d824504e4fa37a75767e177\",\n        \"timestamp\": \"0x58ee40ba\",\n        \"gasLimit\": 4700000,\n        \"difficulty\": 1,\n        \"nonce\": \"0x0000000000000000\",\n        \"extraData\": \"0x52657370656374206d7920617574686f7269746168207e452e436172746d616e42eb768f2244c8811c63729a21a3569731535f067ffc57839b00206d1ad20c69a1981b489f772031b279182d99e65703f0076e4812653aab85fca0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n        \"stateRoot\": \"0x53580584816f617295ea26c0e17641e0120cab2f0a8ffb53a866fd53aa8e8c2d\"\n    },\n    \"hardforks\": [\n        {\n            \"name\": \"chainstart\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"homestead\",\n            \"block\": 1,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"dao\",\n            \"block\": null,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"tangerineWhistle\",\n            \"block\": 2,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"spuriousDragon\",\n            \"block\": 3,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"byzantium\",\n            \"block\": 1035301,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"constantinople\",\n            \"block\": 3660663,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"petersburg\",\n            \"block\": 4321234,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"istanbul\",\n            \"block\": 5435345,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        }\n    ],\n    \"bootstrapNodes\": [\n        {\n            \"ip\": \"52.169.42.101\",\n            \"port\": 30303,\n            \"id\": \"a24ac7c5484ef4ed0c5eb2d36620ba4e4aa13b8c84684e1b4aab0cebea2ae45cb4d375b77eab56516d34bfbd3c1a833fc51296ff084b770b94fb9028c4d25ccf\",\n            \"location\": \"\",\n            \"comment\": \"IE\"\n        },\n        {\n            \"ip\": \"52.3.158.184\",\n            \"port\": 30303,\n            \"id\": \"343149e4feefa15d882d9fe4ac7d88f885bd05ebb735e547f12e12080a9fa07c8014ca6fd7f373123488102fe5e34111f8509cf0b7de3f5b44339c9f25e87cb8\",\n            \"location\": \"\",\n            \"comment\": \"INFURA\"\n        },\n        {\n            \"ip\": \"159.89.28.211\",\n            \"port\": 30303,\n            \"id\": \"b6b28890b006743680c52e64e0d16db57f28124885595fa03a562be1d2bf0f3a1da297d56b13da25fb992888fd556d4c1a27b1f39d531bde7de1921c90061cc6\",\n            \"location\": \"\",\n            \"comment\": \"AKASHA\"\n        }\n    ]\n}\n;","module.exports = {\n    \"name\": \"kovan\",\n    \"chainId\": 42,\n    \"networkId\": 42,\n    \"comment\": \"Parity PoA test network\",\n    \"url\": \"https://kovan-testnet.github.io/website/\",\n    \"genesis\": {\n        \"hash\": \"0xa3c565fc15c7478862d50ccd6561e3c06b24cc509bf388941c25ea985ce32cb9\",\n        \"timestamp\": null,\n        \"gasLimit\": 6000000,\n        \"difficulty\": 131072,\n        \"nonce\": \"0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n        \"extraData\": \"0x\",\n        \"stateRoot\": \"0x2480155b48a1cea17d67dbfdfaafe821c1d19cdd478c5358e8ec56dec24502b2\"\n    },\n    \"hardforks\": [\n        {\n            \"name\": \"chainstart\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"homestead\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"dao\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"tangerineWhistle\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"spuriousDragon\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"byzantium\",\n            \"block\": 5067000,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"constantinople\",\n            \"block\": 9200000,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"petersburg\",\n            \"block\": 10255201,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"istanbul\",\n            \"block\": 14111141,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        }\n    ],\n    \"bootstrapNodes\": [\n        {\n            \"ip\": \"116.203.116.241\",\n            \"port\": 30303,\n            \"id\": \"16898006ba2cd4fa8bf9a3dfe32684c178fa861df144bfc21fe800dc4838a03e342056951fa9fd533dcb0be1219e306106442ff2cf1f7e9f8faa5f2fc1a3aa45\",\n            \"location\": \"\",\n            \"comment\": \"1\"\n        },\n        {\n            \"ip\": \"3.217.96.11\",\n            \"port\": 30303,\n            \"id\": \"2909846f78c37510cc0e306f185323b83bb2209e5ff4fdd279d93c60e3f365e3c6e62ad1d2133ff11f9fd6d23ad9c3dad73bb974d53a22f7d1ac5b7dea79d0b0\",\n            \"location\": \"\",\n            \"comment\": \"2\"\n        },\n        {\n            \"ip\": \"108.61.170.124\",\n            \"port\": 30303,\n            \"id\": \"740e1c8ea64e71762c71a463a04e2046070a0c9394fcab5891d41301dc473c0cff00ebab5a9bc87fbcb610ab98ac18225ff897bc8b7b38def5975d5ceb0a7d7c\",\n            \"location\": \"\",\n            \"comment\": \"3\"\n        },\n        {\n            \"ip\": \"157.230.31.163\",\n            \"port\": 30303,\n            \"id\": \"2909846f78c37510cc0e306f185323b83bb2209e5ff4fdd279d93c60e3f365e3c6e62ad1d2133ff11f9fd6d23ad9c3dad73bb974d53a22f7d1ac5b7dea79d0b0\",\n            \"location\": \"\",\n            \"comment\": \"4\"\n        }\n    ]\n}\n;","module.exports = {\n    \"name\": \"goerli\",\n    \"chainId\": 5,\n    \"networkId\": 5,\n    \"comment\": \"Cross-client PoA test network\",\n    \"url\": \"https://github.com/goerli/testnet\",\n    \"genesis\": {\n        \"hash\": \"0xbf7e331f7f7c1dd2e05159666b3bf8bc7a8a3a9eb1d518969eab529dd9b88c1a\",\n        \"timestamp\": \"0x5c51a607\",\n        \"gasLimit\": 10485760,\n        \"difficulty\": 1,\n        \"nonce\": \"0x0000000000000000\",\n        \"extraData\": \"0x22466c6578692069732061207468696e6722202d204166726900000000000000e0a2bd4258d2768837baa26a28fe71dc079f84c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n        \"stateRoot\": \"0x5d6cded585e73c4e322c30c2f782a336316f17dd85a4863b9d838d2d4b8b3008\"\n    },\n    \"hardforks\": [\n        {\n            \"name\": \"chainstart\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"homestead\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"dao\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"tangerineWhistle\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"spuriousDragon\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"byzantium\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"constantinople\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"petersburg\",\n            \"block\": 0,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        },\n        {\n            \"name\": \"istanbul\",\n            \"block\": 1561651,\n            \"consensus\": \"poa\",\n            \"finality\": null\n        }\n    ],\n    \"bootstrapNodes\": [\n        {\n            \"ip\": \"51.141.78.53\",\n            \"port\": 30303,\n            \"id\": \"011f758e6552d105183b1761c5e2dea0111bc20fd5f6422bc7f91e0fabbec9a6595caf6239b37feb773dddd3f87240d99d859431891e4a642cf2a0a9e6cbb98a\",\n            \"location\": \"\",\n            \"comment\": \"Upstream bootnode 1\"\n        },\n        {\n            \"ip\": \"13.93.54.137\",\n            \"port\": 30303,\n            \"id\": \"176b9417f511d05b6b2cf3e34b756cf0a7096b3094572a8f6ef4cdcb9d1f9d00683bf0f83347eebdf3b81c3521c2332086d9592802230bf528eaf606a1d9677b\",\n            \"location\": \"\",\n            \"comment\": \"Upstream bootnode 2\"\n        },\n        {\n            \"ip\": \"94.237.54.114\",\n            \"port\": 30313,\n            \"id\": \"46add44b9f13965f7b9875ac6b85f016f341012d84f975377573800a863526f4da19ae2c620ec73d11591fa9510e992ecc03ad0751f53cc02f7c7ed6d55c7291\",\n            \"location\": \"\",\n            \"comment\": \"Upstream bootnode 3\"\n        },\n        {\n            \"ip\": \"52.64.155.147\",\n            \"port\": 30303,\n            \"id\": \"c1f8b7c2ac4453271fa07d8e9ecf9a2e8285aa0bd0c07df0131f47153306b0736fd3db8924e7a9bf0bed6b1d8d4f87362a71b033dc7c64547728d953e43e59b2\",\n            \"location\": \"\",\n            \"comment\": \"Upstream bootnode 4\"\n        },\n        {\n            \"ip\": \"213.186.16.82\",\n            \"port\": 30303,\n            \"id\": \"f4a9c6ee28586009fb5a96c8af13a58ed6d8315a9eee4772212c1d4d9cebe5a8b8a78ea4434f318726317d04a3f531a1ef0420cf9752605a562cfe858c46e263\",\n            \"location\": \"\",\n            \"comment\": \"Upstream bootnode 5\"\n        },\n        {\n            \"ip\": \"3.11.147.67\",\n            \"port\": 30303,\n            \"id\": \"a61215641fb8714a373c80edbfa0ea8878243193f57c96eeb44d0bc019ef295abd4e044fd619bfc4c59731a73fb79afe84e9ab6da0c743ceb479cbb6d263fa91\",\n            \"location\": \"\",\n            \"comment\": \"Ethereum Foundation bootnode\"\n        }\n    ]\n}\n;",null,"module.exports = {\n    \"name\": \"chainstart\",\n    \"comment\": \"Start of the Ethereum main chain\",\n    \"eip\": {\n        \"url\": \"\",\n        \"status\": \"\"\n    },\n    \"status\": \"\",\n    \"gasConfig\": {\n        \"minGasLimit\": {\n            \"v\": 5000,\n            \"d\": \"Minimum the gas limit may ever be\"\n        },\n        \"gasLimitBoundDivisor\": {\n            \"v\": 1024,\n            \"d\": \"The bound divisor of the gas limit, used in update calculations\"\n        }\n    },\n    \"gasPrices\": {\n        \"base\": {\n            \"v\": 2,\n            \"d\": \"Gas base cost, used e.g. for ChainID opcode (Istanbul)\"\n        },\n        \"tierStep\": {\n            \"v\": [0, 2, 3, 5, 8, 10, 20],\n            \"d\": \"Once per operation, for a selection of them\"\n        },\n        \"exp\": {\n            \"v\": 10,\n            \"d\": \"Once per EXP instuction\"\n        },\n        \"expByte\": {\n            \"v\": 10,\n            \"d\": \"Times ceil(log256(exponent)) for the EXP instruction\"\n        },\n        \"sha3\": {\n            \"v\": 30,\n            \"d\": \"Once per SHA3 operation\"\n        },\n        \"sha3Word\": {\n            \"v\": 6,\n            \"d\": \"Once per word of the SHA3 operation's data\"\n        },\n        \"sload\": {\n            \"v\": 50,\n            \"d\": \"Once per SLOAD operation\"\n        },\n        \"sstoreSet\": {\n            \"v\": 20000,\n            \"d\": \"Once per SSTORE operation if the zeroness changes from zero\"\n        },\n        \"sstoreReset\": {\n            \"v\": 5000,\n            \"d\": \"Once per SSTORE operation if the zeroness does not change from zero\"\n        },\n        \"sstoreRefund\": {\n            \"v\": 15000,\n            \"d\": \"Once per SSTORE operation if the zeroness changes to zero\"\n        },\n        \"jumpdest\": {\n            \"v\": 1,\n            \"d\": \"Refunded gas, once per SSTORE operation if the zeroness changes to zero\"\n        },\n        \"log\": {\n            \"v\": 375,\n            \"d\": \"Per LOG* operation\"\n        },\n        \"logData\": {\n            \"v\": 8,\n            \"d\": \"Per byte in a LOG* operation's data\"\n        },\n        \"logTopic\": {\n            \"v\": 375,\n            \"d\": \"Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas\"\n        },\n        \"create\": {\n            \"v\": 32000,\n            \"d\": \"Once per CREATE operation & contract-creation transaction\"\n        },\n        \"call\": {\n            \"v\": 40,\n            \"d\": \"Once per CALL operation & message call transaction\"\n        },\n        \"callStipend\": {\n            \"v\": 2300,\n            \"d\": \"Free gas given at beginning of call\"\n        },\n        \"callValueTransfer\": {\n            \"v\": 9000,\n            \"d\": \"Paid for CALL when the value transfor is non-zero\"\n        },\n        \"callNewAccount\": {\n            \"v\": 25000,\n            \"d\": \"Paid for CALL when the destination address didn't exist prior\"\n        },\n        \"selfdestructRefund\": {\n            \"v\": 24000,\n            \"d\": \"Refunded following a selfdestruct operation\"\n        },\n        \"memory\": {\n            \"v\": 3,\n            \"d\": \"Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL\"\n        },\n        \"quadCoeffDiv\": {\n            \"v\": 512,\n            \"d\": \"Divisor for the quadratic particle of the memory cost equation\"\n        },\n        \"createData\": {\n            \"v\": 200,\n            \"d\": \"\"\n        },\n        \"tx\": {\n            \"v\": 21000,\n            \"d\": \"Per transaction. NOTE: Not payable on data of calls between transactions\"\n        },\n        \"txCreation\": {\n            \"v\": 32000,\n            \"d\": \"The cost of creating a contract via tx\"\n        },\n        \"txDataZero\": {\n            \"v\": 4,\n            \"d\": \"Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions\"\n        },\n        \"txDataNonZero\": {\n            \"v\": 68,\n            \"d\": \"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions\"\n        },\n        \"copy\": {\n            \"v\": 3,\n            \"d\": \"Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added\"\n        },\n        \"ecRecover\": {\n            \"v\": 3000,\n            \"d\": \"\"\n        },\n        \"sha256\": {\n            \"v\": 60,\n            \"d\": \"\"\n        },\n        \"sha256Word\": {\n            \"v\": 12,\n            \"d\": \"\"\n        },\n        \"ripemd160\": {\n            \"v\": 600,\n            \"d\": \"\"\n        },\n        \"ripemd160Word\": {\n            \"v\": 120,\n            \"d\": \"\"\n        },\n        \"identity\": {\n            \"v\": 15,\n            \"d\": \"\"\n        },\n        \"identityWord\": {\n            \"v\": 3,\n            \"d\": \"\"\n        }\n    },\n    \"vm\": {\n        \"stackLimit\": {\n            \"v\": 1024,\n            \"d\": \"Maximum size of VM stack allowed\"\n        },\n        \"callCreateDepth\": {\n            \"v\": 1024,\n            \"d\": \"Maximum depth of call/create stack\"\n        },\n        \"maxExtraDataSize\": {\n            \"v\": 32,\n            \"d\": \"Maximum size extra data may be after Genesis\"\n        }\n    },\n    \"pow\": {\n        \"minimumDifficulty\": {\n            \"v\": 131072,\n            \"d\": \"The minimum that the difficulty may ever be\"\n        },\n        \"difficultyBoundDivisor\": {\n            \"v\": 2048,\n            \"d\": \"The bound divisor of the difficulty, used in the update calculations\"\n        },\n        \"durationLimit\": {\n            \"v\": 13,\n            \"d\": \"The decision boundary on the blocktime duration used to determine whether difficulty should go up or not\"\n        },\n        \"epochDuration\": {\n            \"v\": 30000,\n            \"d\": \"Duration between proof-of-work epochs\"\n        },\n        \"timebombPeriod\": {\n            \"v\": 100000,\n            \"d\": \"Exponential difficulty timebomb period\"\n        },\n        \"minerReward\": {\n            \"v\": \"5000000000000000000\",\n            \"d\": \"the amount a miner get rewarded for mining a block\"\n        }\n    },\n    \"casper\": {},\n    \"sharding\": {}\n}\n;","module.exports = {\n    \"name\": \"homestead\",\n    \"comment\": \"Homestead hardfork with protocol and network changes\",\n    \"eip\": {\n        \"url\": \"https://eips.ethereum.org/EIPS/eip-606\",\n        \"status\": \"Final\"\n    },\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {},\n    \"casper\": {},\n    \"sharding\": {}\n}\n;","module.exports = {\n    \"name\": \"dao\",\n    \"comment\": \"DAO rescue hardfork\",\n    \"eip\": {\n        \"url\": \"https://eips.ethereum.org/EIPS/eip-779\",\n        \"status\": \"Final\"\n    },\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {},\n    \"casper\": {},\n    \"sharding\": {}\n}\n;","module.exports = {\n    \"name\": \"tangerineWhistle\",\n    \"comment\": \"Hardfork with gas cost changes for IO-heavy operations\",\n    \"eip\": {\n        \"url\": \"https://eips.ethereum.org/EIPS/eip-608\",\n        \"status\": \"Final\"\n    },\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"sload\": {\n            \"v\": 200,\n            \"d\": \"Once per SLOAD operation\"\n        },\n        \"call\": {\n            \"v\": 700,\n            \"d\": \"Once per CALL operation & message call transaction\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {},\n    \"casper\": {},\n    \"sharding\": {}\n}\n;","module.exports = {\n    \"name\": \"spuriousDragon\",\n    \"comment\": \"HF with EIPs for simple replay attack protection, EXP cost increase, state trie clearing, contract code size limit\",\n    \"eip\": {\n        \"url\": \"https://eips.ethereum.org/EIPS/eip-607\",\n        \"status\": \"Final\"\n    },\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"expByte\": {\n            \"v\": 50,\n            \"d\": \"Times ceil(log256(exponent)) for the EXP instruction\"\n        }\n    },\n    \"vm\": {\n        \"maxCodeSize\": {\n            \"v\": 24576,\n            \"d\": \"Maximum length of contract code\"\n        }\n    },\n    \"pow\": {},\n    \"casper\": {},\n    \"sharding\": {}\n}\n;","module.exports = {\n    \"name\": \"byzantium\",\n    \"comment\": \"Hardfork with new precompiles, instructions and other protocol changes\",\n    \"eip\": {\n        \"url\": \"https://eips.ethereum.org/EIPS/eip-609\",\n        \"status\": \"Final\"\n    },\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"modexpGquaddivisor\": {\n            \"v\": 20,\n            \"d\": \"Gquaddivisor from modexp precompile for gas calculation\"\n        },\n        \"ecAdd\": {\n            \"v\": 500,\n            \"d\": \"Gas costs for curve addition precompile\"\n        },\n        \"ecMul\": {\n            \"v\": 40000,\n            \"d\": \"Gas costs for curve multiplication precompile\"\n        },\n        \"ecPairing\": {\n            \"v\": 100000,\n            \"d\": \"Base gas costs for curve pairing precompile\"\n        },\n        \"ecPairingWord\": {\n            \"v\": 80000,\n            \"d\": \"Gas costs regarding curve pairing precompile input length\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {\n        \"minerReward\": {\n            \"v\": \"3000000000000000000\",\n            \"d\": \"the amount a miner get rewarded for mining a block\"\n        }\n    },\n    \"casper\": {},\n    \"sharding\": {}\n}\n;","module.exports = {\n    \"name\": \"constantinople\",\n    \"comment\": \"Postponed hardfork including EIP-1283 (SSTORE gas metering changes)\",\n    \"eip\": {\n        \"url\": \"https://eips.ethereum.org/EIPS/eip-1013\",\n        \"status\": \"Final\"\n    },\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"netSstoreNoopGas\": {\n            \"v\": 200,\n            \"d\": \"Once per SSTORE operation if the value doesn't change\"\n        },\n        \"netSstoreInitGas\": {\n            \"v\": 20000,\n            \"d\": \"Once per SSTORE operation from clean zero\"\n        },\n        \"netSstoreCleanGas\": {\n            \"v\": 5000,\n            \"d\": \"Once per SSTORE operation from clean non-zero\"\n        },\n        \"netSstoreDirtyGas\": {\n            \"v\": 200,\n            \"d\": \"Once per SSTORE operation from dirty\"\n        },\n        \"netSstoreClearRefund\": {\n            \"v\": 15000,\n            \"d\": \"Once per SSTORE operation for clearing an originally existing storage slot\"\n        },\n        \"netSstoreResetRefund\": {\n            \"v\": 4800,\n            \"d\": \"Once per SSTORE operation for resetting to the original non-zero value\"\n        },\n        \"netSstoreResetClearRefund\": {\n            \"v\": 19800,\n            \"d\": \"Once per SSTORE operation for resetting to the original zero value\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {\n        \"minerReward\": {\n            \"v\": \"2000000000000000000\",\n            \"d\": \"The amount a miner gets rewarded for mining a block\"\n        }\n    },\n    \"casper\": {},\n    \"sharding\": {}\n}\n;","module.exports = {\n    \"name\": \"petersburg\",\n    \"comment\": \"Aka constantinopleFix, removes EIP-1283, activate together with or after constantinople\",\n    \"eip\": {\n        \"url\": \"https://eips.ethereum.org/EIPS/eip-1716\",\n        \"status\": \"Draft\"\n    },\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"netSstoreNoopGas\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        },\n        \"netSstoreInitGas\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        },\n        \"netSstoreCleanGas\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        },\n        \"netSstoreDirtyGas\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        },\n        \"netSstoreClearRefund\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        },\n        \"netSstoreResetRefund\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        },\n        \"netSstoreResetClearRefund\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {},\n    \"casper\": {},\n    \"sharding\": {}\n}\n;","module.exports = {\n    \"name\": \"istanbul\",\n    \"comment\": \"HF targeted for December 2019 following the Constantinople/Petersburg HF\",\n    \"eip\": {\n        \"url\": \"https://eips.ethereum.org/EIPS/eip-1679\",\n        \"status\": \"Draft\"\n    },\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"blake2Round\": {\n            \"v\": 1,\n            \"d\": \"Gas cost per round for the Blake2 F precompile\"\n        },\n        \"ecAdd\": {\n            \"v\": 150,\n            \"d\": \"Gas costs for curve addition precompile\"\n        },\n        \"ecMul\": {\n            \"v\": 6000,\n            \"d\": \"Gas costs for curve multiplication precompile\"\n        },\n        \"ecPairing\": {\n            \"v\": 45000,\n            \"d\": \"Base gas costs for curve pairing precompile\"\n        },\n        \"ecPairingWord\": {\n            \"v\": 34000,\n            \"d\": \"Gas costs regarding curve pairing precompile input length\"\n        },\n        \"txDataNonZero\": {\n            \"v\": 16,\n            \"d\": \"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions\"\n        },\n        \"sstoreSentryGasEIP2200\": {\n            \"v\": 2300,\n            \"d\": \"Minimum gas required to be present for an SSTORE call, not consumed\"\n        },\n        \"sstoreNoopGasEIP2200\": {\n            \"v\": 800,\n            \"d\": \"Once per SSTORE operation if the value doesn't change\"\n        },\n        \"sstoreDirtyGasEIP2200\": {\n            \"v\": 800,\n            \"d\": \"Once per SSTORE operation if a dirty value is changed\"\n        },\n        \"sstoreInitGasEIP2200\": {\n            \"v\": 20000,\n            \"d\": \"Once per SSTORE operation from clean zero to non-zero\"\n        },\n        \"sstoreInitRefundEIP2200\": {\n            \"v\": 19200,\n            \"d\": \"Once per SSTORE operation for resetting to the original zero value\"\n        },\n        \"sstoreCleanGasEIP2200\": {\n            \"v\": 5000,\n            \"d\": \"Once per SSTORE operation from clean non-zero to something else\"\n        },\n        \"sstoreCleanRefundEIP2200\": {\n            \"v\": 4200,\n            \"d\": \"Once per SSTORE operation for resetting to the original non-zero value\"\n        },\n        \"sstoreClearRefundEIP2200\": {\n            \"v\": 15000,\n            \"d\": \"Once per SSTORE operation for clearing an originally existing storage slot\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {},\n    \"casper\": {},\n    \"sharding\": {}\n}\n;","module.exports = {\n    \"name\": \"muirGlacier\",\n    \"comment\": \"HF to delay the difficulty bomb\",\n    \"eip\": {\n        \"url\": \"https://eips.ethereum.org/EIPS/eip-2384\",\n        \"status\": \"Last Call\"\n    },\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {},\n    \"casper\": {},\n    \"sharding\": {}\n}\n;",null,null,null]}